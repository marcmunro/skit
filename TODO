Status:
  tests 1&2 pass, 3 fails with role "lose" does not exist (an
  endfallback issue).

First refactoring
  Eliminate the need for swapBackwardBreakers() by building the deps
  properly in the first place, and then having redirectBackwardDeps() do
  the right thing.

Next refactoring
  Modify processing so that ddl processing is done before dependency
  resolution.  This will allow dbobject nodes which have no code
  associated with them (ie most diffprep nodes) to be dropped from the
  nodelist before dep resolution is done.

  The process would be:
  - perform ddl processing
  - remove unused nodes
  - resolve deps
    This may add fallback nodes
  - redirect deps
  - tsort
  - add navigation
  - perform secondary ddl pass
    This will add code for the fallbacks, contexts, and any
    standard code (for echoes, comments, vertical spacing, etc

Final planned refactoring is to reolve the following isse with test3 by
eliminating the drop-side duplication of fallbacks.  Drop-side
duplication will only be necessary if the parent node of the fallback
node is a rebuild node.

Issue with test3
  Issue is that fallbacks depend on granting lose to keep, but lose is
  deing dropped.  Once lose is dropped, the endfallback (revoking it
  again) cannot be performed.

  Possible solution - do not mirror the fallback operations: 
  instead of:
     fallback<-buildside<-endfallback<-dsfallback<-dropside<-endds
  have this:
     fallback<-buildside<-dropside<-endfallback
  and have endfallback demoted to an exists node if any of its
  dependencies are dropped.

Implement code for DEMOTE case in deps.c:redirectNodeDeps

Check handling of all existing ownership diffs - are they being handled
in a manner consistent with conversions?


diffs:
    do the concat thing for objects below as in done in generate for
    schemata

    functions (including the concat thing)
    types (including the concat thing)
    domains (including the concat thing)
    casts (including the concat thing)
    operators (including the concat thing)
    operator_classes (including the concat thing)
    operator_families (including the concat thing)
    sequences (including the concat thing)
    aggregates (including the concat thing)
    tables (including the concat thing)
    constraints (including the concat thing)
    indices (including the concat thing)
    rules (including the concat thing)
    views (including the concat thing)
    triggers (including the concat thing)

generate:
  - Add echoes code to all database objects
  - ensure vertical spacing is good in code generated for diffs
    (actually, for all code)
  - eliminate QQQ commented lines in ddl/*.xsl

smart tsort:
    new tsort function
    change name of tsort selection from simple_tsort to fast_tsort

make the echoes option functional in generate 
change name of ignore-contexts option in generate

grep

docs:
    man page
    user guide
    doxygen
    developers guide

8.4 changes
9.0 changes
9.1 changes
9.2 changes
9.3 changes


