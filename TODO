NEED PROPER INSTALLATION MECHANISM FOR skit_test.control
Also config for the same



type changes including range types

9.2 loads of stuff



security barrier views
window functions
leakproof functions
transform functions?



deferable constraints? 9.0 onwards



components in extensions:
  languages                yes
  casts			   yes
  conversions		   yes
  functions		   yes
  aggregates		   yes
  operators		   yes    
  operator_families        yes
  operator_classes	   yes
  tables		   yes
  constraints		   yes
  indexes		   yes
  rules			   yes
  triggers		   yes
  sequences		   yes
  comptypes		   yes
  types			   yes
  domains		   yes
  schemata		   yes
  text search config	   yes
  text search template	   yes
  text search dictionary   yes
  text search parser	   yes
  foreign data wrapper	   yes
  foreign data server	   yes
  user mapping		   yes
  foreign table		   yes
  collations		   yes

  

generate:
  - ensure vertical spacing is good in code generated for diffs
    (actually, for all code)
  - allow non-superusers to run skit
  - shout option for ddl (ie upper case)
  - allow upgrades for extensions to be done manually (ie without
    upgrade script).
  - eliminate empty code blocks
  - eliminate any unnecessary grants (there seem to be some associated
    with extensions in 9.1 regression test3)

deps optimisations:
  - When there are fallbacks on both sides but there do not need to be,
    deactivate the fallback and dsendfallback leaving only the
    dsfallback and endfallback.
  - Figure out how to handle auto-dropping of dependent objects (eg
    grant of select on a table when the role or table is dropped).
  - We should optimise the dropping of dependent objects when their
    dependency is dropped.  Eg grants on object when object is dropped.


smart tsort:
    new tsort function
    change name of tsort selection from simple_tsort to fast_tsort

make the echoes option functional in generate 
change name of ignore-contexts option in generate

grep

Others
  Allow handling of a lack of priv by commenting out the code.  This
  probably also requires deps to be marked as temporary or transient or
  some such.

  Allow an as-user opton.

Bugs and Issues:

  Need to consider how to deal with automatically named constraints.

  Figure out how to give useful error messages when we do not have the
  necessary priv for an operation.  To do this we may need the concept
  of a temporary dependency (one that only needs to exist for the
  duration of the build/drop/diff actions, and not subsequently. 

  Allow nodes to be dependent on alternate parents (eg for cluster
  objects such as roles, tablespaces, etc)?


docs:
    man page
    user guide
    doxygen
    developers guide

9.2 changes
9.3 changes



REFACTORINGS
Remove as many attributes as possible from the dbobject element.
Particularly role_name, table_name and qname.  Move any needed fields
into the actual dbobject (eg table, role, view) objects.

add tablespace_is_default attribute for sequences, constraints and
indices.
