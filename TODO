Current Try making fqns for automatic grants, not contain the grantee.
If this works remove the owner pqn stuff.  Reexamine the pqn-dep
template and its associates in add_deps.xsl



WORKING ON:

- BUILDING TEST CASES for NP3.  See test/data/depdiffs_1a.sql
  test/check_deps.c

TODO: Rename condition attribute of dependencies to direction
      This is a precursor to creating a condition attribute which
      enables/disables a dependency-set based on whether we are doing a
      build, drop or diff.  We need this because create privilege on the
      schema is required for object creation, but usage is required for
      object manipulation.



NP4:
dep tests fail.  This seems to be a consequence of the ongoing deps
work.  Let's deal with this later.

Nested Problem 3:
dependency-sets for owner diffs are incorrect.  See comments in
diffs/functions.xml for details on what needs to happen.  Unit test
cases should probably be constructed before tackling this stuff.

Nested Problem 2:
Trying to make the fqns of grants to the owner of an object simpler than
other grants.  In this case it is enough to know what has been granted
and we do not need to know to which or by which role it was granted.
This will allow ownership of objects to be changed without needing to
change any grants.  A unit test case should be constructed for this.

Partial changes have been implemented in add_deps.xsl and deps.grants.xsl

Nested Problem 1:
Stymied on a sequence issue:

It seems that the owner cannot modify the current value of the
sequence if they do not have update privilege on the sequence (and
possibly usage on the schema).  Note that this may be a postgresql bug
and should be checked, and reported if so.



Item: Think about what to do for automatically named constraints


Check handling of all existing ownership diffs - are they being handled
in a manner consistent with conversions?

[ This may cease to be an issue after refactoring of the xsl? ]

    conversions		yes
    schemata		yes
    cluster		n/a
    database		yes
    types		n/a
    functions		yes
    aggregates		yes
    casts		n/a
    operators		yes
    operator_classes	yes
    operator_families	yes
    basetypes		yes
    composite types	yes
    domains		yes
    sequences		TODO
    tables		TODO
    views		TODO
    constraints		TODO
    rules		TODO
    triggers		TODO
    indices		TODO


Do the concat thing for objects below as is done in generate for
schemata (in ddl)

diffs:
    sequences (including the concat thing)
    tables (including the concat thing)
    constraints (including the concat thing)
    indices (including the concat thing)
    rules (including the concat thing)
    views (including the concat thing)
    triggers (including the concat thing)

Add handling for FDWs and any other 8.4 things

generate:
  - ensure vertical spacing is good in code generated for diffs
    (actually, for all code)

allow non-superusers to run skit

shout option for ddl

elininate ddl for the "other case" in ddl/grants.xsl commented around line 44

smart tsort:
    new tsort function
    change name of tsort selection from simple_tsort to fast_tsort

make the echoes option functional in generate 
change name of ignore-contexts option in generate

grep

docs:
    man page
    user guide
    doxygen
    developers guide

9.0 changes
9.1 changes
9.2 changes
9.3 changes


The FBDROP and FBBUILD redirectActionTypes in deps.c are nasty hacks.
Although they *may* be safe they should be replaced with something more
elegant.  What may be needed is a separation of the fallback nodes into
fallback and drop-side fallback variants.  Each of these would be
created when resolving the appropriate DAG (forwards or backwards).



REFACTORINGS
Remove as many attributes as possible from the dbobject element.
Particularly role_name, table_name and qname.  Move any needed fields
into the actual dbobject (eg table, role, view) objects.
