WORKING ON finsihing conversion of ddl to new consistency.  Working on tables.xsl

Bugs and Issues:
  We should optimise the dropping of dependent objects when their
  dependency is dropped.  Eg grants on object when object is dropped.

  Cannot manipulate roles which are superusers if we are not a superuser.
  This seems to need dependency-sets which are conditional on the
  activation or existence of fallback nodes.  We need to make this as
  general a solution as possible, and we must recheck such conditional
  dependency-sets when activating fallback nodes.
  Example scripts in error_example.sql

  Need to consider how to deal with automatically named constraints.

  Condider whether we can remove diffprep nodes and combine them with
  diff.  This would require us to use the old ownership context and
  provide access rights to that old context for both sides of the dag.
  The ownership change would then be the last thing that was done in the
  diff script.

  When multiple fallbacks have been invoked see whether one can be used
  to make others unnecessary.
  
  Figure out how to give useful error messages when we do not have the
  necessary priv for an operation.  To do this we may need the concept
  of a temporary dependency (one that only needs to exist for the
  duration of the build/drop/diff actions, and not subsequently. 

  Allow handling of a lack of priv by commenting out the code.  This
  probably also requires deps to be marked as temporary or transient or
  some such.

  Allow an as-user opton.

  Allow nodes to be dependent on alternate parents (eg for cluster
  objects such as roles, tablespaces, etc)?

  Identify any issues/new features raised in DEPS.txt

CHECK THIS:
  It seems that the owner cannot modify the current value of the
  sequence if they do not have update privilege on the sequence (and
  possibly usage on the schema).  Note that this may be a postgresql bug
  and should be checked, and reported if so.


TODO:
Check handling of all existing ownership diffs - are they being handled
in a manner consistent with conversions?

diffs:
    sequences (including the concat thing)
    tables (including the concat thing)
    constraints (including the concat thing)
    indices (including the concat thing)
    rules (including the concat thing)
    views (including the concat thing)
    triggers (including the concat thing)

Add handling for FDWs and any other 8.4 things

generate:
  - ensure vertical spacing is good in code generated for diffs
    (actually, for all code)

allow non-superusers to run skit

shout option for ddl (ie upper case)

elininate ddl for the "other case" in ddl/grants.xsl commented around line 44

smart tsort:
    new tsort function
    change name of tsort selection from simple_tsort to fast_tsort

make the echoes option functional in generate 
change name of ignore-contexts option in generate

grep

docs:
    man page
    user guide
    doxygen
    developers guide

9.0 changes
9.1 changes
9.2 changes
9.3 changes


The FBDROP and FBBUILD redirectActionTypes in deps.c are nasty hacks.
Although they *may* be safe they should be replaced with something more
elegant.  What may be needed is a separation of the fallback nodes into
fallback and drop-side fallback variants.  Each of these would be
created when resolving the appropriate DAG (forwards or backwards).



REFACTORINGS
Remove as many attributes as possible from the dbobject element.
Particularly role_name, table_name and qname.  Move any needed fields
into the actual dbobject (eg table, role, view) objects.
