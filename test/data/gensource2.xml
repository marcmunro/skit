<?xml version="1.0"?>
<dump xmlns:skit="http://www.bloodnok.com/xml/skit" xmlns:xi="http://www.w3.org/2003/XInclude" dbtype="postgres" dbname="skittest" time="20090611091918">
  <dbobject type="cluster" visit="true" name="cluster" fqn="cluster">
    <cluster type="postgres" version="8.4.14" username="marc">
      <dbobject type="role" name="marc" qname="marc" fqn="role.marc" parent="database.skittest">
        <dependency fqn="database.skittest"/>
        <role name="marc" login="y" password="md5c62bc3e38bac4209132682f13509ba96" max_connections="-1">
          <dbobject type="privilege" name="superuser" fqn="privilege.role.marc.superuser" qname="superuser" parent="role.marc" role_qname="marc">
            <dependencies>
              <dependency fqn="role.marc"/>
            </dependencies>
            <privilege priv="superuser"/>
          </dbobject>
          <dbobject type="privilege" name="inherit" fqn="privilege.role.marc.inherit" qname="inherit" parent="role.marc" role_qname="marc">
            <dependencies>
              <dependency fqn="role.marc"/>
            </dependencies>
            <privilege priv="inherit"/>
          </dbobject>
          <dbobject type="privilege" name="createrole" fqn="privilege.role.marc.createrole" qname="createrole" parent="role.marc" role_qname="marc">
            <dependencies>
              <dependency fqn="role.marc"/>
            </dependencies>
            <privilege priv="createrole"/>
          </dbobject>
          <dbobject type="privilege" name="createdb" fqn="privilege.role.marc.createdb" qname="createdb" parent="role.marc" role_qname="marc">
            <dependencies>
              <dependency fqn="role.marc"/>
            </dependencies>
            <privilege priv="createdb"/>
          </dbobject>
          <privilege priv="superuser"/>
          <privilege priv="inherit"/>
          <privilege priv="createrole"/>
          <privilege priv="createdb"/>
        </role>
      </dbobject>
      <dbobject type="role" name="postgres" qname="postgres" fqn="role.postgres" parent="database.skittest">
        <dependency fqn="database.skittest"/>
        <role name="postgres" login="y" max_connections="-1">
          <dbobject type="privilege" name="superuser" fqn="privilege.role.postgres.superuser" qname="superuser" parent="role.postgres" role_qname="postgres">
            <dependencies>
              <dependency fqn="role.postgres"/>
            </dependencies>
            <privilege priv="superuser"/>
          </dbobject>
          <dbobject type="privilege" name="inherit" fqn="privilege.role.postgres.inherit" qname="inherit" parent="role.postgres" role_qname="postgres">
            <dependencies>
              <dependency fqn="role.postgres"/>
            </dependencies>
            <privilege priv="inherit"/>
          </dbobject>
          <dbobject type="privilege" name="createrole" fqn="privilege.role.postgres.createrole" qname="createrole" parent="role.postgres" role_qname="postgres">
            <dependencies>
              <dependency fqn="role.postgres"/>
            </dependencies>
            <privilege priv="createrole"/>
          </dbobject>
          <dbobject type="privilege" name="createdb" fqn="privilege.role.postgres.createdb" qname="createdb" parent="role.postgres" role_qname="postgres">
            <dependencies>
              <dependency fqn="role.postgres"/>
            </dependencies>
            <privilege priv="createdb"/>
          </dbobject>
          <privilege priv="superuser"/>
          <privilege priv="inherit"/>
          <privilege priv="createrole"/>
          <privilege priv="createdb"/>
        </role>
      </dbobject>
      <dbobject type="role" name="regress" qname="regress" fqn="role.regress" parent="database.skittest">
        <dependency fqn="database.skittest"/>
        <role name="regress" login="y" password="md5c2a101703f1e515ef9769f835d6fe78a" expires="infinity" max_connections="-1">
          <dbobject type="privilege" name="superuser" fqn="privilege.role.regress.superuser" qname="superuser" parent="role.regress" role_qname="regress">
            <dependencies>
              <dependency fqn="role.regress"/>
            </dependencies>
            <privilege priv="superuser"/>
          </dbobject>
          <privilege priv="superuser"/>
        </role>
      </dbobject>
      <dbobject type="dbincluster" name="skittest" qname="skittest" fqn="dbincluster.skittest" parent="cluster">
        <dependencies>
          <dependency fqn="cluster"/>
        </dependencies>
        <database name="skittest"/>
      </dbobject>
    </cluster>
  </dbobject>
  <dbobject type="database" visit="true" name="skittest" qname="skittest" fqn="database.skittest">
    <dependencies>
      <dependency fqn="dbincluster.skittest"/>
    </dependencies>
    <database name="skittest">
      <dbobject type="grant" name="temporary:public" fqn="grant.database.skittest.temporary:public" qname="" parent="database.skittest" pqn="grant.database.skittest.temporary:public" subtype="database" on="skittest">
        <dependencies>
          <dependency fqn="database.skittest"/>
          <dependency fqn="role.regress"/>
        </dependencies>
        <grant priv="temporary" from="regress" to="public" with_grant="no"/>
      </dbobject>
      <dbobject type="grant" name="connect:public" fqn="grant.database.skittest.connect:public" qname="" parent="database.skittest" pqn="grant.database.skittest.connect:public" subtype="database" on="skittest">
        <dependencies>
          <dependency fqn="database.skittest"/>
          <dependency fqn="role.regress"/>
        </dependencies>
        <grant priv="connect" from="regress" to="public" with_grant="no"/>
      </dbobject>
      <dbobject type="grant" name="create:regress" fqn="grant.database.skittest.create" qname="" parent="database.skittest" pqn="grant.database.skittest.create:regress" subtype="database" on="skittest">
        <dependencies>
          <dependency fqn="database.skittest"/>
          <dependency fqn="role.regress"/>
        </dependencies>
        <grant priv="create" from="regress" to="regress" with_grant="yes"/>
      </dbobject>
      <dbobject type="grant" name="temporary:regress" fqn="grant.database.skittest.temporary" qname="" parent="database.skittest" pqn="grant.database.skittest.temporary:regress" subtype="database" on="skittest">
        <dependencies>
          <dependency fqn="database.skittest"/>
          <dependency fqn="role.regress"/>
        </dependencies>
        <grant priv="temporary" from="regress" to="regress" with_grant="yes"/>
      </dbobject>
      <dbobject type="grant" name="connect:regress" fqn="grant.database.skittest.connect" qname="" parent="database.skittest" pqn="grant.database.skittest.connect:regress" subtype="database" on="skittest">
        <dependencies>
          <dependency fqn="database.skittest"/>
          <dependency fqn="role.regress"/>
        </dependencies>
        <grant priv="connect" from="regress" to="regress" with_grant="yes"/>
      </dbobject>
      <dbobject type="schema" name="public" fqn="schema.skittest.public" qname="public" parent="database.skittest">
        <context type="owner" value="postgres" default="marc"/>
        <dependencies>
          <dependency fqn="database.skittest"/>
          <dependency fqn="role.postgres"/>
        </dependencies>
        <schema name="public" owner="postgres" privs="{postgres=UC/postgres,=UC/postgres}">
          <comment>'standard public schema'</comment>
          <dbobject type="grant" name="usage:public" fqn="grant.schema.skittest.public.usage:public:regress" qname="" parent="schema.skittest.public" pqn="grant.schema.skittest.public.usage:public" subtype="schema" on="public">
            <context type="owner" value="postgres" default="marc"/>
            <dependencies>
              <dependency fqn="schema.skittest.public"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <grant from="regress" to="public" with_grant="no" priv="usage"/>
          </dbobject>
          <dbobject type="view" name="v1" fqn="view.skittest.public.v1" qname="public.v1" parent="schema.skittest.public" cycle_breaker="viewbase">
            <context type="owner" value="marc" default="marc"/>
            <dependencies>
              <dependency fqn="schema.skittest.public"/>
              <dependency fqn="view.skittest.public.v2"/>
              <dependency fqn="role.marc"/>
              <dependency-set priority="1" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                <dependency pqn="grant.schema.skittest.public.create:marc"/>
                <dependency pqn="grant.schema.skittest.public.create:public"/>
                <dependency fqn="privilege.role.marc.superuser"/>
              </dependency-set>
              <dependency-set priority="1" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                <dependency pqn="grant.schema.skittest.public.usage:marc"/>
                <dependency pqn="grant.schema.skittest.public.usage:public"/>
                <dependency fqn="privilege.role.marc.superuser"/>
              </dependency-set>
            </dependencies>
            <view name="v1" schema="public" owner="marc">
              <source>SELECT v2.mykey FROM v2;</source>
              <depends schema="public" view="v2"/>
            </view>
          </dbobject>
          <dbobject type="view" name="v2" fqn="view.skittest.public.v2" qname="public.v2" parent="schema.skittest.public" cycle_breaker="viewbase">
            <context type="owner" value="marc" default="marc"/>
            <dependencies>
              <dependency fqn="schema.skittest.public"/>
              <dependency fqn="view.skittest.public.v3"/>
              <dependency fqn="role.marc"/>
              <dependency-set priority="1" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                <dependency pqn="grant.schema.skittest.public.create:marc"/>
                <dependency pqn="grant.schema.skittest.public.create:public"/>
                <dependency fqn="privilege.role.marc.superuser"/>
              </dependency-set>
              <dependency-set priority="1" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                <dependency pqn="grant.schema.skittest.public.usage:marc"/>
                <dependency pqn="grant.schema.skittest.public.usage:public"/>
                <dependency fqn="privilege.role.marc.superuser"/>
              </dependency-set>
            </dependencies>
            <view name="v2" schema="public" owner="marc">
              <source>SELECT v3.mykey FROM v1;</source>
              <depends schema="public" view="v3"/>
            </view>
          </dbobject>
          <dbobject type="view" name="v3" fqn="view.skittest.public.v3" qname="public.v3" parent="schema.skittest.public" cycle_breaker="viewbase">
            <context type="owner" value="marc" default="marc"/>
            <dependencies>
              <dependency fqn="schema.skittest.public"/>
              <dependency fqn="view.skittest.public.v1"/>
              <dependency fqn="role.marc"/>
              <dependency-set priority="1" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                <dependency pqn="grant.schema.skittest.public.create:marc"/>
                <dependency pqn="grant.schema.skittest.public.create:public"/>
                <dependency fqn="privilege.role.marc.superuser"/>
              </dependency-set>
              <dependency-set priority="1" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                <dependency pqn="grant.schema.skittest.public.usage:marc"/>
                <dependency pqn="grant.schema.skittest.public.usage:public"/>
                <dependency fqn="privilege.role.marc.superuser"/>
              </dependency-set>
            </dependencies>
            <view name="v3" schema="public" owner="marc">
              <source>SELECT v1.mykey FROM v1;</source>
              <depends schema="public" view="v1"/>
            </view>
          </dbobject>
        </schema>
      </dbobject>
    </database>
  </dbobject>
</dump>
