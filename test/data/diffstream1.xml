<?xml version="1.0"?>
<dump xmlns:skit="http://www.bloodnok.com/xml/skit" xmlns:xi="http://www.w3.org/2003/XInclude" dbtype="postgres" dbname="regressdb" time="20141016155801" dbname2="regressdb" time2="20141016155748" retain_deps="true">
  <dbobject type="cluster" visit="true" name="cluster" fqn="cluster" diff="diffkids">
    <dependencies direction="backwards"/>
    <dependencies direction="forwards"/>
    <cluster type="postgres" port="54325 host=/var/run/postgresql" version="8.4.22" host="/var/run/postgresql" skit_xml_version="0.1" username="marc">
      <dbobject type="role" name="keep" qname="keep" fqn="role.keep" parent="database.regressdb" diff="diff">
        <dependencies direction="backwards">
          <dependency fqn="database.regressdb"/>
        </dependencies>
        <dependencies direction="forwards">
          <dependency fqn="database.regressdb"/>
        </dependencies>
        <element status="gone" type="comment">
          <comment>'keep'</comment>
        </element>
        <role name="keep" login="y" password="md5a6e3dfe729e3efdf117eeb1059051f77" max_connections="-1"/>
      </dbobject>
      <dbobject type="role" name="keep2" qname="keep2" fqn="role.keep2" parent="database.regressdb" diff="new">
        <dependency fqn="database.regressdb"/>
        <role name="keep2" login="n" max_connections="-1">
          <privilege priv="inherit"/>
          <dbobject type="privilege" name="inherit" fqn="privilege.role.keep2.inherit" qname="inherit" parent="role.keep2" role_qname="keep2" diff="new">
            <dependencies>
              <dependency fqn="role.keep2"/>
            </dependencies>
            <privilege priv="inherit"/>
          </dbobject>
        </role>
      </dbobject>
      <dbobject type="role" name="marc" qname="marc" fqn="role.marc" parent="database.regressdb" diff="none">
        <dependencies direction="backwards">
          <dependency fqn="database.regressdb"/>
        </dependencies>
        <dependencies direction="forwards">
          <dependency fqn="database.regressdb"/>
        </dependencies>
        <role name="marc" login="y" max_connections="-1">
          <privilege priv="superuser"/>
          <privilege priv="inherit"/>
          <privilege priv="createrole"/>
          <privilege priv="createdb"/>
          <dbobject type="privilege" name="superuser" fqn="privilege.role.marc.superuser" qname="superuser" parent="role.marc" role_qname="marc" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="role.marc"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="role.marc"/>
            </dependencies>
            <privilege priv="superuser"/>
          </dbobject>
          <dbobject type="privilege" name="inherit" fqn="privilege.role.marc.inherit" qname="inherit" parent="role.marc" role_qname="marc" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="role.marc"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="role.marc"/>
            </dependencies>
            <privilege priv="inherit"/>
          </dbobject>
          <dbobject type="privilege" name="createrole" fqn="privilege.role.marc.createrole" qname="createrole" parent="role.marc" role_qname="marc" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="role.marc"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="role.marc"/>
            </dependencies>
            <privilege priv="createrole"/>
          </dbobject>
          <dbobject type="privilege" name="createdb" fqn="privilege.role.marc.createdb" qname="createdb" parent="role.marc" role_qname="marc" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="role.marc"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="role.marc"/>
            </dependencies>
            <privilege priv="createdb"/>
          </dbobject>
        </role>
      </dbobject>
      <dbobject type="role" name="regress" qname="regress" fqn="role.regress" parent="cluster" diff="diff">
        <dependencies direction="backwards">
          <dependency-set>
            <dependency fqn="database.regressdb"/>
            <dependency fqn="cluster"/>
          </dependency-set>
        </dependencies>
        <dependencies direction="forwards">
          <dependency-set>
            <dependency fqn="database.regressdb"/>
            <dependency fqn="cluster"/>
          </dependency-set>
        </dependencies>
        <attribute name="expires" status="diff" old="2100-03-04 00:00:00-08" new="infinity"/>
        <element status="diff" type="config" key="type">
          <config type="client_min_messages" value="warning"/>
          <attribute name="value" status="diff" old="notice" new="warning"/>
        </element>
        <element status="gone" type="privilege" key="priv">
          <privilege priv="inherit"/>
        </element>
        <element status="new" type="comment">
          <comment>'new comment'</comment>
        </element>
        <role name="regress" login="y" password="md5c2a101703f1e515ef9769f835d6fe78a" expires="infinity" max_connections="-1">
          <config type="client_min_messages" value="warning"/>
          <comment>'new comment'</comment>
          <privilege priv="superuser"/>
          <dbobject type="privilege" name="superuser" fqn="privilege.role.regress.superuser" qname="superuser" parent="role.regress" role_qname="regress" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="role.regress"/>
            </dependencies>
            <privilege priv="superuser"/>
          </dbobject>
          <dbobject type="privilege" name="inherit" fqn="privilege.role.regress.inherit" qname="inherit" parent="role.regress" role_qname="regress" diff="gone">
            <dependencies>
              <dependency fqn="role.regress"/>
            </dependencies>
            <privilege priv="inherit"/>
          </dbobject>
        </role>
      </dbobject>
      <dbobject type="role" name="wibble" qname="wibble" fqn="role.wibble" parent="database.regressdb" diff="diff">
        <dependencies direction="backwards">
          <dependency fqn="database.regressdb"/>
        </dependencies>
        <dependencies direction="forwards">
          <dependency fqn="database.regressdb"/>
        </dependencies>
        <attribute name="expires" status="diff" old="2007-03-02 00:00:00-08" new="2007-03-01 00:00:00-08"/>
        <element status="diff" type="comment">
          <comment>'after'</comment>
          <diffs>
            <text>
              <old>'before'</old>
              <new>'after'</new>
            </text>
          </diffs>
        </element>
        <role name="wibble" login="y" password="md54ea9ea89bc47825ea7b2fe7c2288b27a" expires="2007-03-01 00:00:00-08" max_connections="-1">
          <comment>'after'</comment>
        </role>
      </dbobject>
      <dbobject type="tablespace" name="pg_default" fqn="tablespace.pg_default" qname="pg_default" parent="cluster" diff="none">
        <dependencies direction="backwards">
          <dependency fqn="database.regressdb"/>
          <dependency fqn="role.marc"/>
        </dependencies>
        <dependencies direction="forwards">
          <dependency-set>
            <dependency fqn="database."/>
            <dependency fqn="cluster"/>
          </dependency-set>
          <dependency fqn="role.marc"/>
        </dependencies>
        <tablespace name="pg_default" owner="marc" location="">
          <dbobject type="grant" name="create:marc" fqn="grant.tablespace.pg_default.create" qname="" parent="tablespace.pg_default" pqn="grant.tablespace.pg_default.create:marc" subtype="tablespace" on="pg_default" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="tablespace.pg_default"/>
              <dependency fqn="role.marc"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="tablespace.pg_default"/>
              <dependency fqn="role.marc"/>
            </dependencies>
            <context type="owner" value="marc" default="marc" direction="backwards"/>
            <context type="owner" value="marc" default="marc" direction="forwards"/>
            <grant from="marc" to="marc" with_grant="no" priv="create" automatic="yes"/>
          </dbobject>
        </tablespace>
      </dbobject>
      <dbobject type="tablespace" name="tbs2" fqn="tablespace.tbs2" qname="tbs2" parent="database.regressdb" diff="diff">
        <dependencies direction="backwards">
          <dependency fqn="database.regressdb"/>
          <dependency fqn="role.lose"/>
        </dependencies>
        <dependencies direction="forwards">
          <dependency fqn="database.regressdb"/>
          <dependency fqn="role.keep"/>
        </dependencies>
        <dependency-set priority="100" fallback="grant.role.lose.keep" parent="//dbobject[database]">
          <dependency fqn="privilege.role.lose.superuser"/>
          <dependency pqn="grant.role.lose.keep"/>
        </dependency-set>
        <attribute name="owner" status="diff" old="lose" new="keep"/>
        <element status="diff" type="comment">
          <comment>'This is the second tablespace'</comment>
          <diffs>
            <text>
              <old>'This is the 2nd tablespace'</old>
              <new>'This is the second tablespace'</new>
            </text>
          </diffs>
        </element>
        <tablespace name="tbs2" owner="keep" location="/home/marc/proj/skit/regress/REGRESSDB/tbs/tbs2">
          <comment>'This is the second tablespace'</comment>
          <dbobject type="grant" name="create:keep" fqn="grant.tablespace.tbs2.create" qname="" parent="tablespace.tbs2" pqn="grant.tablespace.tbs2.create:keep" subtype="tablespace" on="tbs2" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="tablespace.tbs2"/>
              <dependency fqn="role.lose"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="tablespace.tbs2"/>
              <dependency fqn="role.keep"/>
            </dependencies>
            <context type="owner" value="lose" default="marc" direction="backwards"/>
            <context type="owner" value="keep" default="marc" direction="forwards"/>
            <grant from="keep" to="keep" with_grant="no" priv="create" automatic="yes"/>
          </dbobject>
        </tablespace>
      </dbobject>
      <dbobject type="tablespace" name="tbs3" fqn="tablespace.tbs3" qname="tbs3" parent="database.regressdb" diff="none">
        <dependencies direction="backwards">
          <dependency-set>
            <dependency fqn="database."/>
            <dependency fqn="cluster"/>
          </dependency-set>
          <dependency fqn="role.regress"/>
        </dependencies>
        <dependencies direction="forwards">
          <dependency fqn="database.regressdb"/>
          <dependency fqn="role.regress"/>
        </dependencies>
        <tablespace name="tbs3" owner="regress" location="/home/marc/proj/skit/regress/REGRESSDB/tbs/tbs3">
          <dbobject type="grant" name="create:regress" fqn="grant.tablespace.tbs3.create" qname="" parent="tablespace.tbs3" pqn="grant.tablespace.tbs3.create:regress" subtype="tablespace" on="tbs3" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="tablespace.tbs3"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="tablespace.tbs3"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <grant from="regress" to="regress" with_grant="no" priv="create" automatic="yes"/>
          </dbobject>
          <dbobject type="grant" name="create:keep" fqn="grant.tablespace.tbs3.create:keep" qname="" parent="tablespace.tbs3" pqn="grant.tablespace.tbs3.create:keep" subtype="tablespace" on="tbs3" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="tablespace.tbs3"/>
              <dependency fqn="role.keep"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="tablespace.tbs3"/>
              <dependency fqn="role.keep"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <grant from="regress" to="keep" with_grant="no" priv="create"/>
          </dbobject>
        </tablespace>
      </dbobject>
      <dbobject type="tablespace" name="tbs4" fqn="tablespace.tbs4" qname="tbs4" parent="database.regressdb" diff="diff">
        <dependencies direction="backwards">
          <dependency fqn="database.regressdb"/>
          <dependency fqn="role.wibble"/>
        </dependencies>
        <dependencies direction="forwards">
          <dependency fqn="database.regressdb"/>
          <dependency fqn="role.wibble"/>
        </dependencies>
        <attribute name="location" status="diff" old="/home/marc/proj/skit/regress/REGRESSDB/tbs/tbs4" new="/home/marc/proj/skit/regress/REGRESSDB/tbs/TBS4"/>
        <tablespace name="tbs4" owner="wibble" location="/home/marc/proj/skit/regress/REGRESSDB/tbs/TBS4">
          <dbobject type="grant" name="create:wibble" fqn="grant.tablespace.tbs4.create" qname="" parent="tablespace.tbs4" pqn="grant.tablespace.tbs4.create:wibble" subtype="tablespace" on="tbs4" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="tablespace.tbs4"/>
              <dependency fqn="role.wibble"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="tablespace.tbs4"/>
              <dependency fqn="role.wibble"/>
            </dependencies>
            <context type="owner" value="wibble" default="marc" direction="backwards"/>
            <context type="owner" value="wibble" default="marc" direction="forwards"/>
            <grant from="wibble" to="wibble" with_grant="no" priv="create" automatic="yes"/>
          </dbobject>
        </tablespace>
      </dbobject>
      <dbobject type="dbincluster" name="regressdb" qname="regressdb" fqn="dbincluster.regressdb" parent="cluster" diff="none">
        <dependencies direction="backwards">
          <dependency fqn="cluster"/>
          <dependency fqn="tablespace.tbs3"/>
          <dependency fqn="role.regress"/>
        </dependencies>
        <dependencies direction="forwards">
          <dependency fqn="cluster"/>
          <dependency fqn="role.regress"/>
        </dependencies>
      </dbobject>
      <dbobject type="database" visit="true" name="regressdb" qname="regressdb" fqn="database.regressdb" diff="diff">
        <dependencies direction="backwards">
          <dependency fqn="dbincluster.regressdb"/>
        </dependencies>
        <dependencies direction="forwards">
          <dependency fqn="dbincluster.regressdb"/>
        </dependencies>
        <attribute name="tablespace" status="diff" old="tbs3" new="pg_default"/>
        <attribute name="connections" status="diff" old="-1" new="4"/>
        <element status="diff" type="comment">
          <comment>'new comment'</comment>
          <diffs>
            <text>
              <old>'old comment'</old>
              <new>'new comment'</new>
            </text>
          </diffs>
        </element>
        <database name="regressdb" owner="regress" encoding="UTF8" tablespace="pg_default" connections="4">
          <comment>'new comment'</comment>
          <dbobject type="grant" name="connect:regress" fqn="grant.database.regressdb.connect" qname="" parent="database.regressdb" pqn="grant.database.regressdb.connect:regress" subtype="database" on="regressdb" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <grant from="regress" to="regress" with-grant="no" priv="connect" automatic="yes"/>
          </dbobject>
          <dbobject type="grant" name="temporary:regress" fqn="grant.database.regressdb.temporary" qname="" parent="database.regressdb" pqn="grant.database.regressdb.temporary:regress" subtype="database" on="regressdb" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <grant from="regress" to="regress" with-grant="no" priv="temporary" automatic="yes"/>
          </dbobject>
          <dbobject type="grant" name="create:public" fqn="grant.database.regressdb.create:public" qname="" parent="database.regressdb" pqn="grant.database.regressdb.create:public" subtype="database" on="regressdb" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <grant from="regress" to="public" with-grant="no" priv="create" automatic="yes"/>
          </dbobject>
          <dbobject type="grant" name="connect:public" fqn="grant.database.regressdb.connect:public" qname="" parent="database.regressdb" pqn="grant.database.regressdb.connect:public" subtype="database" on="regressdb" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <grant from="regress" to="public" with-grant="no" priv="connect" automatic="yes"/>
          </dbobject>
          <dbobject type="grant" name="temporary:public" fqn="grant.database.regressdb.temporary:public" qname="" parent="database.regressdb" pqn="grant.database.regressdb.temporary:public" subtype="database" on="regressdb" diff="none">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <grant from="regress" to="public" with-grant="no" priv="temporary" automatic="yes"/>
          </dbobject>
          <dbobject type="language" name="plpgsql" fqn="language.regressdb.plpgsql" qname="plpgsql" parent="database.regressdb" diff="diff">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
              <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                <dependency fqn="grant.schema.regressdb.usage"/>
                <dependency pqn="grant.schema.regressdb.usage:regress"/>
                <dependency pqn="grant.schema.regressdb.usage:public"/>
                <dependency fqn="privilege.role.regress.superuser"/>
              </dependency-set>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
              <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                <dependency fqn="grant.schema.regressdb.create"/>
                <dependency pqn="grant.schema.regressdb.create:regress"/>
                <dependency pqn="grant.schema.regressdb.create:public"/>
                <dependency fqn="privilege.role.regress.superuser"/>
              </dependency-set>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <element status="new" type="comment">
              <comment>'PROCEDural'</comment>
            </element>
            <language name="plpgsql" owner="regress" handler_schema="pg_catalog" handler_function="plpgsql_call_handler" validator_schema="pg_catalog" validator_function="plpgsql_validator" comment="'PROCEDural'">
              <comment>'PROCEDural'</comment>
              <revoke from="regress" to="public" priv="all"/>
              <dbobject type="grant" name="usage:regress" fqn="grant.language.regressdb.plpgsql.usage" qname="" parent="language.regressdb.plpgsql" pqn="grant.language.regressdb.plpgsql.usage:regress" subtype="language" on="plpgsql" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <grant from="regress" to="regress" with_grant="no" priv="usage" automatic="yes"/>
              </dbobject>
              <dbobject type="grant" name="usage:wibble" fqn="grant.language.regressdb.plpgsql.usage:wibble" qname="" parent="language.regressdb.plpgsql" pqn="grant.language.regressdb.plpgsql.usage:wibble" subtype="language" on="plpgsql" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.wibble"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.wibble"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <grant from="regress" to="wibble" with_grant="no" priv="usage"/>
              </dbobject>
              <dbobject type="grant" name="usage:keep" fqn="grant.language.regressdb.plpgsql.usage:keep" qname="" parent="language.regressdb.plpgsql" pqn="grant.language.regressdb.plpgsql.usage:keep" subtype="language" on="plpgsql" diff="new">
                <dependencies>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.keep"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc"/>
                <grant from="regress" to="keep" with_grant="no" priv="usage"/>
              </dbobject>
              <dbobject type="grant" name="usage:public" fqn="grant.language.regressdb.plpgsql.usage:public" qname="" parent="language.regressdb.plpgsql" pqn="grant.language.regressdb.plpgsql.usage:public" subtype="language" on="plpgsql" diff="gone">
                <dependencies>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc"/>
                <grant from="regress" to="public" with_grant="no" priv="usage" automatic="yes"/>
              </dbobject>
            </language>
          </dbobject>
          <dbobject type="cast" name="public.mychar::pg_catalog.bytea" fqn="cast.regressdb.public.mychar::pg_catalog.bytea" qname="(public.mychar as pg_catalog.bytea)" parent="database.regressdb" diff="diff">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="type.regressdb.public.mychar"/>
              <dependency fqn="function.regressdb.public.mycharsend(public.mychar)"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="type.regressdb.public.mychar"/>
              <dependency fqn="function.regressdb.public.mycharsend(public.mychar)"/>
            </dependencies>
            <element status="diff" type="comment">
              <comment>'changed cast comment'</comment>
              <diffs>
                <text>
                  <old>'cast comment'</old>
                  <new>'changed cast comment'</new>
                </text>
              </diffs>
            </element>
            <cast name="public.mychar::pg_catalog.bytea" context="a">
              <source type="mychar" schema="public"/>
              <target type="bytea" schema="pg_catalog"/>
              <handler-function type="cast" name="mycharsend" schema="public" signature="public.mycharsend(public.mychar)"/>
              <comment>'changed cast comment'</comment>
            </cast>
          </dbobject>
          <dbobject type="cast" name="public.mychar::public.postal2" fqn="cast.regressdb.public.mychar::public.postal2" qname="(public.mychar as public.postal2)" parent="database.regressdb" diff="new">
            <dependencies>
              <dependency fqn="database.regressdb"/>
              <dependency fqn="type.regressdb.public.mychar"/>
              <dependency fqn="type.regressdb.public.postal2"/>
            </dependencies>
            <cast name="public.mychar::public.postal2" context="e">
              <source type="mychar" schema="public"/>
              <target type="postal2" schema="public"/>
            </cast>
          </dbobject>
          <dbobject type="schema" name="public" fqn="schema.regressdb.public" qname="public" parent="database.regressdb" diff="diffkids">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.marc"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.marc"/>
            </dependencies>
            <context type="owner" value="marc" default="marc" direction="backwards"/>
            <context type="owner" value="marc" default="marc" direction="forwards"/>
            <schema name="public" owner="marc" privs="{marc=UC/marc,=UC/marc}">
              <comment>'standard public schema'</comment>
              <dbobject type="grant" name="usage:marc" fqn="grant.schema.regressdb.public.usage" qname="" parent="schema.regressdb.public" pqn="grant.schema.regressdb.public.usage:marc" subtype="schema" on="public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.marc"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.marc"/>
                </dependencies>
                <context type="owner" value="marc" default="marc" direction="backwards"/>
                <context type="owner" value="marc" default="marc" direction="forwards"/>
                <grant from="marc" to="marc" with_grant="no" priv="usage" automatic="yes"/>
              </dbobject>
              <dbobject type="grant" name="create:marc" fqn="grant.schema.regressdb.public.create" qname="" parent="schema.regressdb.public" pqn="grant.schema.regressdb.public.create:marc" subtype="schema" on="public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.marc"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.marc"/>
                </dependencies>
                <context type="owner" value="marc" default="marc" direction="backwards"/>
                <context type="owner" value="marc" default="marc" direction="forwards"/>
                <grant from="marc" to="marc" with_grant="no" priv="create" automatic="yes"/>
              </dbobject>
              <dbobject type="grant" name="usage:public" fqn="grant.schema.regressdb.public.usage:public" qname="" parent="schema.regressdb.public" pqn="grant.schema.regressdb.public.usage:public" subtype="schema" on="public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.marc"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.marc"/>
                </dependencies>
                <context type="owner" value="marc" default="marc" direction="backwards"/>
                <context type="owner" value="marc" default="marc" direction="forwards"/>
                <grant from="marc" to="public" with_grant="no" priv="usage" automatic="yes"/>
              </dbobject>
              <dbobject type="grant" name="create:public" fqn="grant.schema.regressdb.public.create:public" qname="" parent="schema.regressdb.public" pqn="grant.schema.regressdb.public.create:public" subtype="schema" on="public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.marc"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.marc"/>
                </dependencies>
                <context type="owner" value="marc" default="marc" direction="backwards"/>
                <context type="owner" value="marc" default="marc" direction="forwards"/>
                <grant from="marc" to="public" with_grant="no" priv="create" automatic="yes"/>
              </dbobject>
              <dbobject type="domain" name="postal2" fqn="type.regressdb.public.postal2" qname="public.postal2" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <domain name="postal2" schema="public" owner="regress" basetype="mychar" basetype_schema="public" nullable="yes"/>
              </dbobject>
              <dbobject type="domain" name="postal3" fqn="type.regressdb.public.postal3" qname="public.postal3" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.keep"/>
                  <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:keep"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.regress.keep" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.regress.superuser"/>
                  <dependency pqn="grant.role.regress.keep"/>
                </dependency-set>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="keep" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="regress" new="keep"/>
                <element status="diff" type="comment">
                  <comment>'wibbly'</comment>
                  <diffs>
                    <text>
                      <old>'wibble'</old>
                      <new>'wibbly'</new>
                    </text>
                  </diffs>
                </element>
                <domain name="postal3" schema="public" owner="keep" basetype="mychar" basetype_schema="public" default="'x'::mychar" nullable="no">
                  <comment>'wibbly'</comment>
                </domain>
              </dbobject>
              <dbobject type="domain" name="postal4" fqn="type.regressdb.public.postal4" qname="public.postal4" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <attribute name="nullable" status="diff" old="no" new="yes"/>
                <domain name="postal4" schema="public" owner="regress" basetype="mychar" basetype_schema="public" default="'z'::mychar" nullable="yes"/>
              </dbobject>
              <dbobject type="domain" name="postal5" fqn="type.regressdb.public.postal5" qname="public.postal5" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <attribute name="default" status="diff" old="'q'::mychar" new="'z'::mychar"/>
                <domain name="postal5" schema="public" owner="regress" basetype="mychar" basetype_schema="public" default="'z'::mychar" nullable="yes"/>
              </dbobject>
              <dbobject type="domain" name="postal6" fqn="type.regressdb.public.postal6" qname="public.postal6" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <attribute name="nullable" status="diff" old="no" new="yes"/>
                <attribute name="default" status="gone" old="'x'::mychar"/>
                <domain name="postal6" schema="public" owner="regress" basetype="mychar" basetype_schema="public" nullable="yes"/>
              </dbobject>
              <dbobject type="domain" name="us_postal_code" fqn="type.regressdb.public.us_postal_code" qname="public.us_postal_code" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="gone" type="constraint" key="name">
                  <constraint name="MyConstraintName_Ugh" schema="public" constraint_type="c">
                    <source>CHECK (((VALUE ~ '^\\d{4}$'::text) OR (VALUE ~ '^\\d{5}-\\d{4}$'::text)))</source>
                  </constraint>
                </element>
                <element status="new" type="constraint" key="name">
                  <constraint name="us_postal_code_check" schema="public" constraint_type="c">
                    <source>CHECK (((VALUE ~ '^\\d{3}$'::text) OR (VALUE ~ '^\\d{5}-\\d{4}$'::text)))</source>
                  </constraint>
                </element>
                <domain name="us_postal_code" schema="public" owner="regress" basetype="text" basetype_schema="pg_catalog" nullable="yes">
                  <constraint name="us_postal_code_check" schema="public" constraint_type="c">
                    <source>CHECK (((VALUE ~ '^\\d{3}$'::text) OR (VALUE ~ '^\\d{5}-\\d{4}$'::text)))</source>
                  </constraint>
                </domain>
              </dbobject>
              <dbobject type="domain" name="us_postal_code2" fqn="type.regressdb.public.us_postal_code2" qname="public.us_postal_code2" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="gone" type="constraint" key="name">
                  <constraint name="us_postal_code2_check" schema="public" constraint_type="c">
                    <source>CHECK (((VALUE ~ '^\\d{4}$'::text) OR (VALUE ~ '^\\d{5}-\\d{4}$'::text)))</source>
                  </constraint>
                </element>
                <domain name="us_postal_code2" schema="public" owner="regress" basetype="text" basetype_schema="pg_catalog" nullable="yes"/>
              </dbobject>
              <dbobject type="type" name="mychar" fqn="type.regressdb.public.mychar" qname="public.mychar" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.mycharout(public.mychar)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.mycharout(public.mychar)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <type name="mychar" schema="public" owner="regress" subtype="basetype" delimiter="," typelen="1" alignment="char" storage="plain" passbyval="yes" is_defined="t">
                  <handler-function type="input" name="mycharin" schema="public" signature="public.mycharin(pg_catalog.cstring)"/>
                  <handler-function type="output" name="mycharout" schema="public" signature="public.mycharout(public.mychar)"/>
                  <comment>'mychar'</comment>
                </type>
              </dbobject>
              <dbobject type="type" name="seg" fqn="type.regressdb.public.seg" qname="public.seg" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.seg_in(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.seg_out(public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.seg_in(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.seg_out(public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <type name="seg" schema="public" owner="regress" subtype="basetype" delimiter="," typelen="12" alignment="int4" storage="plain" is_defined="t">
                  <handler-function type="input" name="seg_in" schema="public" signature="public.seg_in(pg_catalog.cstring)"/>
                  <handler-function type="output" name="seg_out" schema="public" signature="public.seg_out(public.seg)"/>
                  <comment>'floating point interval ''FLOAT .. FLOAT'', ''.. FLOAT'', ''FLOAT ..'' or ''FLOAT'''</comment>
                </type>
              </dbobject>
              <dbobject type="type" name="wib" fqn="type.regressdb.public.wib" qname="public.wib" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib_in(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.wib_out(public.wib)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib_in(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.wib_out(public.wib)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <type name="wib" schema="public" owner="regress" subtype="basetype" delimiter="," typelen="12" alignment="int4" storage="plain" is_defined="t">
                  <handler-function type="input" name="wib_in" schema="public" signature="public.wib_in(pg_catalog.cstring)"/>
                  <handler-function type="output" name="wib_out" schema="public" signature="public.wib_out(public.wib)"/>
                </type>
              </dbobject>
              <dbobject type="type" name="wib2" fqn="type.regressdb.public.wib2" qname="public.wib2" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib2_in(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.wib2_out(public.wib2)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib2_in(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.wib2_out(public.wib2)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="gone" type="comment">
                  <comment>'wib2'</comment>
                </element>
                <type name="wib2" schema="public" owner="regress" subtype="basetype" delimiter="," typelen="12" alignment="int4" storage="plain" is_defined="t">
                  <handler-function type="input" name="wib2_in" schema="public" signature="public.wib2_in(pg_catalog.cstring)"/>
                  <handler-function type="output" name="wib2_out" schema="public" signature="public.wib2_out(public.wib2)"/>
                </type>
              </dbobject>
              <dbobject type="type" name="wib3" fqn="type.regressdb.public.wib3" qname="public.wib3" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib3_in(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.wib3_out(public.wib3)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib3_in(pg_catalog.cstring)"/>
                  <dependency fqn="function.regressdb.public.wib3_out(public.wib3)"/>
                  <dependency fqn="role.keep"/>
                  <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:keep"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.regress.keep" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.regress.superuser"/>
                  <dependency pqn="grant.role.regress.keep"/>
                </dependency-set>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="keep" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="regress" new="keep"/>
                <element status="diff" type="comment">
                  <comment>'wib3 but different'</comment>
                  <diffs>
                    <text>
                      <old>'wib3'</old>
                      <new>'wib3 but different'</new>
                    </text>
                  </diffs>
                </element>
                <type name="wib3" schema="public" owner="keep" subtype="basetype" delimiter="," typelen="12" alignment="int4" storage="plain" is_defined="t">
                  <handler-function type="input" name="wib3_in" schema="public" signature="public.wib3_in(pg_catalog.cstring)"/>
                  <handler-function type="output" name="wib3_out" schema="public" signature="public.wib3_out(public.wib3)"/>
                  <comment>'wib3 but different'</comment>
                </type>
              </dbobject>
              <dbobject type="type" name="veil_variable_t" fqn="type.regressdb.public.veil_variable_t" qname="public.veil_variable_t" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.keep"/>
                  <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:keep"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.regress.keep" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.regress.superuser"/>
                  <dependency pqn="grant.role.regress.keep"/>
                </dependency-set>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="keep" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="regress" new="keep"/>
                <element status="diff" type="comment">
                  <comment>'veil_variable_t with different comment'</comment>
                  <diffs>
                    <text>
                      <old>'veil_variable_t'</old>
                      <new>'veil_variable_t with different comment'</new>
                    </text>
                  </diffs>
                </element>
                <type name="veil_variable_t" schema="public" owner="keep" subtype="comptype" is_defined="t">
                  <column id="1" name="name" type="text" type_schema="pg_catalog"/>
                  <column id="2" name="type" type="text" type_schema="pg_catalog"/>
                  <column id="3" name="shared" type="bool" type_schema="pg_catalog"/>
                  <comment>'veil_variable_t with different comment'</comment>
                </type>
              </dbobject>
              <dbobject type="type" name="vv2_t" fqn="type.regressdb.public.vv2_t" qname="public.vv2_t" parent="schema.regressdb.public" diff="rebuild">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="column" key="id">
                  <column id="3" name="shared" type="text" type_schema="pg_catalog"/>
                  <attribute name="type" status="diff" old="bool" new="text"/>
                </element>
                <type name="vv2_t" schema="public" owner="regress" subtype="comptype" is_defined="t">
                  <column id="1" name="name" type="text" type_schema="pg_catalog"/>
                  <column id="2" name="type" type="text" type_schema="pg_catalog"/>
                  <column id="3" name="shared" type="text" type_schema="pg_catalog"/>
                </type>
              </dbobject>
              <dbobject type="type" name="vv3_t" fqn="type.regressdb.public.vv3_t" qname="public.vv3_t" parent="schema.regressdb.public" diff="rebuild">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="column" key="id">
                  <column id="1" name="name" type="text" type_schema="pg_catalog">
                    <comment>'name column updated'</comment>
                  </column>
                  <element status="diff" type="comment">
                    <comment>'name column updated'</comment>
                    <diffs>
                      <text>
                        <old>'name column'</old>
                        <new>'name column updated'</new>
                      </text>
                    </diffs>
                  </element>
                </element>
                <element status="diff" type="column" key="id">
                  <column id="2" name="shared" type="bool" type_schema="pg_catalog"/>
                  <attribute name="name" status="diff" old="type" new="shared"/>
                  <attribute name="type" status="diff" old="text" new="bool"/>
                </element>
                <element status="new" type="comment">
                  <comment>'vv3_t'</comment>
                </element>
                <type name="vv3_t" schema="public" owner="regress" subtype="comptype" is_defined="t">
                  <column id="1" name="name" type="text" type_schema="pg_catalog">
                    <comment>'name column updated'</comment>
                  </column>
                  <column id="2" name="shared" type="bool" type_schema="pg_catalog"/>
                  <comment>'vv3_t'</comment>
                </type>
              </dbobject>
              <dbobject type="type" name="vv4_t" fqn="type.regressdb.public.vv4_t" qname="public.vv4_t" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="column" key="id">
                  <column id="1" name="name" type="text" type_schema="pg_catalog">
                    <comment>'name column with changed comment'</comment>
                  </column>
                  <element status="diff" type="comment">
                    <comment>'name column with changed comment'</comment>
                    <diffs>
                      <text>
                        <old>'name column'</old>
                        <new>'name column with changed comment'</new>
                      </text>
                    </diffs>
                  </element>
                </element>
                <element status="diff" type="column" key="id">
                  <column id="2" name="type" type="text" type_schema="pg_catalog">
                    <comment>'type column with new comment'</comment>
                  </column>
                  <element status="new" type="comment">
                    <comment>'type column with new comment'</comment>
                  </element>
                </element>
                <type name="vv4_t" schema="public" owner="regress" subtype="comptype" is_defined="t">
                  <column id="1" name="name" type="text" type_schema="pg_catalog">
                    <comment>'name column with changed comment'</comment>
                  </column>
                  <column id="2" name="type" type="text" type_schema="pg_catalog">
                    <comment>'type column with new comment'</comment>
                  </column>
                </type>
              </dbobject>
              <dbobject type="function" name="addkint4" fqn="function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4)" qname="public.addkint4(pg_catalog.int4,pg_catalog.int4)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="addkint4" schema="public" owner="regress" language="plpgsql" volatility="stable" cost="5" signature="public.addkint4(pg_catalog.int4,pg_catalog.int4)">
                  <result type="int4" schema="pg_catalog"/>
                  <params>
                    <param type="int4" schema="pg_catalog" name="_state" mode="i" position="1"/>
                    <param type="int4" schema="pg_catalog" name="_next" mode="i" position="2"/>
                  </params>
                  <source>
begin
  return _state + _next;
end;
</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4).execute" qname="" parent="function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4)" pqn="grant.function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4).execute:regress" subtype="function" on="public.addkint4(pg_catalog.int4,pg_catalog.int4)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4).execute:public" qname="" parent="function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4)" pqn="grant.function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4).execute:public" subtype="function" on="public.addkint4(pg_catalog.int4,pg_catalog.int4)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="addnint4" fqn="function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4)" qname="public.addnint4(pg_catalog.int4,pg_catalog.int4)" parent="schema.regressdb.public" diff="new">
                <dependencies>
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc"/>
                <function name="addnint4" schema="public" owner="regress" language="plpgsql" volatility="stable" cost="5" signature="public.addnint4(pg_catalog.int4,pg_catalog.int4)">
                  <result type="int4" schema="pg_catalog"/>
                  <params>
                    <param type="int4" schema="pg_catalog" name="_state" mode="i" position="1"/>
                    <param type="int4" schema="pg_catalog" name="_next" mode="i" position="2"/>
                  </params>
                  <source>
begin
  return _state + _next;
end;
</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4).execute" qname="" parent="function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4)" pqn="grant.function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4).execute:regress" subtype="function" on="public.addnint4(pg_catalog.int4,pg_catalog.int4)" diff="new">
                    <dependencies>
                      <dependency fqn="function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4).execute:public" qname="" parent="function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4)" pqn="grant.function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4).execute:public" subtype="function" on="public.addnint4(pg_catalog.int4,pg_catalog.int4)" diff="new">
                    <dependencies>
                      <dependency fqn="function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="mycharin" fqn="function.regressdb.public.mycharin(pg_catalog.cstring)" qname="public.mycharin(pg_catalog.cstring)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="mycharin" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" privs="{=X/regress,regress=X/regress,keep=X/regress}" cost="1" signature="public.mycharin(pg_catalog.cstring)">
                  <handler-for-type name="mychar" schema="public"/>
                  <result type="mychar" schema="public"/>
                  <params>
                    <param type="cstring" schema="pg_catalog" mode="i" position="1"/>
                  </params>
                  <source>charin</source>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.mycharin(pg_catalog.cstring).execute:public" qname="" parent="function.regressdb.public.mycharin(pg_catalog.cstring)" pqn="grant.function.regressdb.public.mycharin(pg_catalog.cstring).execute:public" subtype="function" on="public.mycharin(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with_grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.mycharin(pg_catalog.cstring).execute" qname="" parent="function.regressdb.public.mycharin(pg_catalog.cstring)" pqn="grant.function.regressdb.public.mycharin(pg_catalog.cstring).execute:regress" subtype="function" on="public.mycharin(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with_grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:keep" fqn="grant.function.regressdb.public.mycharin(pg_catalog.cstring).execute:keep" qname="" parent="function.regressdb.public.mycharin(pg_catalog.cstring)" pqn="grant.function.regressdb.public.mycharin(pg_catalog.cstring).execute:keep" subtype="function" on="public.mycharin(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                      <dependency fqn="role.keep"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                      <dependency fqn="role.keep"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="keep" with_grant="no" priv="execute"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="mycharout" fqn="function.regressdb.public.mycharout(public.mychar)" qname="public.mycharout(public.mychar)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.mycharin(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="mycharout" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.mycharout(public.mychar)">
                  <handler-for-type name="mychar" schema="public" type_input_signature="public.mycharin(pg_catalog.cstring)"/>
                  <result type="cstring" schema="pg_catalog"/>
                  <params>
                    <param type="mychar" schema="public" mode="i" position="1"/>
                  </params>
                  <source>charout</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.mycharout(public.mychar).execute" qname="" parent="function.regressdb.public.mycharout(public.mychar)" pqn="grant.function.regressdb.public.mycharout(public.mychar).execute:regress" subtype="function" on="public.mycharout(public.mychar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.mycharout(public.mychar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.mycharout(public.mychar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.mycharout(public.mychar).execute:public" qname="" parent="function.regressdb.public.mycharout(public.mychar)" pqn="grant.function.regressdb.public.mycharout(public.mychar).execute:public" subtype="function" on="public.mycharout(public.mychar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.mycharout(public.mychar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.mycharout(public.mychar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.mychar"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="mycharsend" fqn="function.regressdb.public.mycharsend(public.mychar)" qname="public.mycharsend(public.mychar)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.mychar"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="mycharsend" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.mycharsend(public.mychar)">
                  <result type="bytea" schema="pg_catalog"/>
                  <params>
                    <param type="mychar" schema="public" mode="i" position="1"/>
                  </params>
                  <source>charsend</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.mycharsend(public.mychar).execute" qname="" parent="function.regressdb.public.mycharsend(public.mychar)" pqn="grant.function.regressdb.public.mycharsend(public.mychar).execute:regress" subtype="function" on="public.mycharsend(public.mychar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.mycharsend(public.mychar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.mycharsend(public.mychar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.mycharsend(public.mychar).execute:public" qname="" parent="function.regressdb.public.mycharsend(public.mychar)" pqn="grant.function.regressdb.public.mycharsend(public.mychar).execute:public" subtype="function" on="public.mycharsend(public.mychar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.mycharsend(public.mychar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.mycharsend(public.mychar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_cmp" fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)" qname="public.seg_cmp(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_cmp" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_cmp(public.seg,public.seg)">
                  <comment>'btree comparison function'</comment>
                  <result type="int4" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_cmp</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_cmp(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_cmp(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_cmp(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_cmp(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_cmp(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_cmp(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_cmp(public.seg,public.seg).execute:public" subtype="function" on="public.seg_cmp(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_cmp2" fqn="function.regressdb.public.seg_cmp2(public.seg,public.seg)" qname="public.seg_cmp2(public.seg,public.seg)" parent="schema.regressdb.public" diff="new">
                <dependencies>
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc"/>
                <function name="seg_cmp2" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_cmp2(public.seg,public.seg)">
                  <result type="int4" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_cmp</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_cmp2(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_cmp2(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_cmp2(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_cmp2(public.seg,public.seg)" diff="new">
                    <dependencies>
                      <dependency fqn="function.regressdb.public.seg_cmp2(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_cmp2(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_cmp2(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_cmp2(public.seg,public.seg).execute:public" subtype="function" on="public.seg_cmp2(public.seg,public.seg)" diff="new">
                    <dependencies>
                      <dependency fqn="function.regressdb.public.seg_cmp2(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_different" fqn="function.regressdb.public.seg_different(public.seg,public.seg)" qname="public.seg_different(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_different" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_different(public.seg,public.seg)">
                  <comment>'different'</comment>
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_different</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_different(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_different(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_different(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_different(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_different(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_different(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_different(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_different(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_different(public.seg,public.seg).execute:public" subtype="function" on="public.seg_different(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_different(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_different(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_ge" fqn="function.regressdb.public.seg_ge(public.seg,public.seg)" qname="public.seg_ge(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_ge" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_ge(public.seg,public.seg)">
                  <comment>'greater than or equal'</comment>
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_ge</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_ge(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_ge(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_ge(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_ge(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_ge(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_ge(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_ge(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_ge(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_ge(public.seg,public.seg).execute:public" subtype="function" on="public.seg_ge(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_ge(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_ge(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_gt" fqn="function.regressdb.public.seg_gt(public.seg,public.seg)" qname="public.seg_gt(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_gt" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_gt(public.seg,public.seg)">
                  <comment>'greater than'</comment>
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_gt</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_gt(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_gt(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_gt(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_gt(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_gt(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_gt(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_gt(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_gt(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_gt(public.seg,public.seg).execute:public" subtype="function" on="public.seg_gt(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_gt(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_gt(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_in" fqn="function.regressdb.public.seg_in(pg_catalog.cstring)" qname="public.seg_in(pg_catalog.cstring)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_in" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_in(pg_catalog.cstring)">
                  <handler-for-type name="seg" schema="public"/>
                  <result type="seg" schema="public"/>
                  <params>
                    <param type="cstring" schema="pg_catalog" mode="i" position="1"/>
                  </params>
                  <source>seg_in</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_in(pg_catalog.cstring).execute" qname="" parent="function.regressdb.public.seg_in(pg_catalog.cstring)" pqn="grant.function.regressdb.public.seg_in(pg_catalog.cstring).execute:regress" subtype="function" on="public.seg_in(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.seg"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.seg"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_in(pg_catalog.cstring).execute:public" qname="" parent="function.regressdb.public.seg_in(pg_catalog.cstring)" pqn="grant.function.regressdb.public.seg_in(pg_catalog.cstring).execute:public" subtype="function" on="public.seg_in(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.seg"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.seg"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_le" fqn="function.regressdb.public.seg_le(public.seg,public.seg)" qname="public.seg_le(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_le" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_le(public.seg,public.seg)">
                  <comment>'less than or equal'</comment>
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_le</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_le(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_le(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_le(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_le(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_le(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_le(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_le(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_le(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_le(public.seg,public.seg).execute:public" subtype="function" on="public.seg_le(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_le(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_le(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_left" fqn="function.regressdb.public.seg_left(public.seg,public.seg)" qname="public.seg_left(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_left" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_left(public.seg,public.seg)">
                  <comment>'is left of'</comment>
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_left</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_left(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_left(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_left(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_left(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_left(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_left(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_left(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_left(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_left(public.seg,public.seg).execute:public" subtype="function" on="public.seg_left(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_left(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_left(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_lt" fqn="function.regressdb.public.seg_lt(public.seg,public.seg)" qname="public.seg_lt(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_lt" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_lt(public.seg,public.seg)">
                  <comment>'less than'</comment>
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_lt</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_lt(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_lt(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_lt(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_lt(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_lt(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_lt(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_lt(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_lt(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_lt(public.seg,public.seg).execute:public" subtype="function" on="public.seg_lt(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_lt(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_lt(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_out" fqn="function.regressdb.public.seg_out(public.seg)" qname="public.seg_out(public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.seg_in(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.seg_in(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_out" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_out(public.seg)">
                  <handler-for-type name="seg" schema="public" type_input_signature="public.seg_in(pg_catalog.cstring)"/>
                  <result type="cstring" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                  </params>
                  <source>seg_out</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_out(public.seg).execute" qname="" parent="function.regressdb.public.seg_out(public.seg)" pqn="grant.function.regressdb.public.seg_out(public.seg).execute:regress" subtype="function" on="public.seg_out(public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_out(public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.seg"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_out(public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.seg"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_out(public.seg).execute:public" qname="" parent="function.regressdb.public.seg_out(public.seg)" pqn="grant.function.regressdb.public.seg_out(public.seg).execute:public" subtype="function" on="public.seg_out(public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_out(public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.seg"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_out(public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.seg"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_right" fqn="function.regressdb.public.seg_right(public.seg,public.seg)" qname="public.seg_right(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_right" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_right(public.seg,public.seg)">
                  <comment>'is right of'</comment>
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_right</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_right(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_right(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_right(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_right(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_right(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_right(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_right(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_right(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_right(public.seg,public.seg).execute:public" subtype="function" on="public.seg_right(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_right(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_right(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="seg_same" fqn="function.regressdb.public.seg_same(public.seg,public.seg)" qname="public.seg_same(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="seg_same" schema="public" owner="regress" language="c" is_strict="yes" volatility="immutable" bin="$libdir/seg" cost="1" signature="public.seg_same(public.seg,public.seg)">
                  <comment>'same as'</comment>
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="seg" schema="public" mode="i" position="1"/>
                    <param type="seg" schema="public" mode="i" position="2"/>
                  </params>
                  <source>seg_same</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.seg_same(public.seg,public.seg).execute" qname="" parent="function.regressdb.public.seg_same(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_same(public.seg,public.seg).execute:regress" subtype="function" on="public.seg_same(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_same(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_same(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.seg_same(public.seg,public.seg).execute:public" qname="" parent="function.regressdb.public.seg_same(public.seg,public.seg)" pqn="grant.function.regressdb.public.seg_same(public.seg,public.seg).execute:public" subtype="function" on="public.seg_same(public.seg,public.seg)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.seg_same(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.seg_same(public.seg,public.seg)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="wib2_in" fqn="function.regressdb.public.wib2_in(pg_catalog.cstring)" qname="public.wib2_in(pg_catalog.cstring)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="wib2_in" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.wib2_in(pg_catalog.cstring)">
                  <handler-for-type name="wib2" schema="public"/>
                  <result type="wib2" schema="public"/>
                  <params>
                    <param type="cstring" schema="pg_catalog" mode="i" position="1"/>
                  </params>
                  <source>charin</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.wib2_in(pg_catalog.cstring).execute" qname="" parent="function.regressdb.public.wib2_in(pg_catalog.cstring)" pqn="grant.function.regressdb.public.wib2_in(pg_catalog.cstring).execute:regress" subtype="function" on="public.wib2_in(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib2_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib2"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib2_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib2"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.wib2_in(pg_catalog.cstring).execute:public" qname="" parent="function.regressdb.public.wib2_in(pg_catalog.cstring)" pqn="grant.function.regressdb.public.wib2_in(pg_catalog.cstring).execute:public" subtype="function" on="public.wib2_in(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib2_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib2"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib2_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib2"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="wib2_out" fqn="function.regressdb.public.wib2_out(public.wib2)" qname="public.wib2_out(public.wib2)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib2_in(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib2_in(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="wib2_out" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.wib2_out(public.wib2)">
                  <handler-for-type name="wib2" schema="public" type_input_signature="public.wib2_in(pg_catalog.cstring)"/>
                  <result type="cstring" schema="pg_catalog"/>
                  <params>
                    <param type="wib2" schema="public" mode="i" position="1"/>
                  </params>
                  <source>charout</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.wib2_out(public.wib2).execute" qname="" parent="function.regressdb.public.wib2_out(public.wib2)" pqn="grant.function.regressdb.public.wib2_out(public.wib2).execute:regress" subtype="function" on="public.wib2_out(public.wib2)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib2_out(public.wib2)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib2"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib2_out(public.wib2)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib2"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.wib2_out(public.wib2).execute:public" qname="" parent="function.regressdb.public.wib2_out(public.wib2)" pqn="grant.function.regressdb.public.wib2_out(public.wib2).execute:public" subtype="function" on="public.wib2_out(public.wib2)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib2_out(public.wib2)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib2"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib2_out(public.wib2)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib2"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="wib3_in" fqn="function.regressdb.public.wib3_in(pg_catalog.cstring)" qname="public.wib3_in(pg_catalog.cstring)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="wib3_in" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.wib3_in(pg_catalog.cstring)">
                  <handler-for-type name="wib3" schema="public"/>
                  <result type="wib3" schema="public"/>
                  <params>
                    <param type="cstring" schema="pg_catalog" mode="i" position="1"/>
                  </params>
                  <source>charin</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.wib3_in(pg_catalog.cstring).execute" qname="" parent="function.regressdb.public.wib3_in(pg_catalog.cstring)" pqn="grant.function.regressdb.public.wib3_in(pg_catalog.cstring).execute:regress" subtype="function" on="public.wib3_in(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib3_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib3"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib3_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib3"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.wib3_in(pg_catalog.cstring).execute:public" qname="" parent="function.regressdb.public.wib3_in(pg_catalog.cstring)" pqn="grant.function.regressdb.public.wib3_in(pg_catalog.cstring).execute:public" subtype="function" on="public.wib3_in(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib3_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib3"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib3_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib3"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="wib3_out" fqn="function.regressdb.public.wib3_out(public.wib3)" qname="public.wib3_out(public.wib3)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib3_in(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib3_in(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="wib3_out" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.wib3_out(public.wib3)">
                  <handler-for-type name="wib3" schema="public" type_input_signature="public.wib3_in(pg_catalog.cstring)"/>
                  <result type="cstring" schema="pg_catalog"/>
                  <params>
                    <param type="wib3" schema="public" mode="i" position="1"/>
                  </params>
                  <source>charout</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.wib3_out(public.wib3).execute" qname="" parent="function.regressdb.public.wib3_out(public.wib3)" pqn="grant.function.regressdb.public.wib3_out(public.wib3).execute:regress" subtype="function" on="public.wib3_out(public.wib3)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib3_out(public.wib3)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib3"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib3_out(public.wib3)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib3"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.wib3_out(public.wib3).execute:public" qname="" parent="function.regressdb.public.wib3_out(public.wib3)" pqn="grant.function.regressdb.public.wib3_out(public.wib3).execute:public" subtype="function" on="public.wib3_out(public.wib3)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib3_out(public.wib3)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib3"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib3_out(public.wib3)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib3"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="wib_gt" fqn="function.regressdb.public.wib_gt(public.wib,public.wib)" qname="public.wib_gt(public.wib,public.wib)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="wib_gt" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.wib_gt(public.wib,public.wib)">
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="wib" schema="public" mode="i" position="1"/>
                    <param type="wib" schema="public" mode="i" position="2"/>
                  </params>
                  <source>text_gt</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.wib_gt(public.wib,public.wib).execute" qname="" parent="function.regressdb.public.wib_gt(public.wib,public.wib)" pqn="grant.function.regressdb.public.wib_gt(public.wib,public.wib).execute:regress" subtype="function" on="public.wib_gt(public.wib,public.wib)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib_gt(public.wib,public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib_gt(public.wib,public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.wib_gt(public.wib,public.wib).execute:public" qname="" parent="function.regressdb.public.wib_gt(public.wib,public.wib)" pqn="grant.function.regressdb.public.wib_gt(public.wib,public.wib).execute:public" subtype="function" on="public.wib_gt(public.wib,public.wib)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib_gt(public.wib,public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib_gt(public.wib,public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="wib_in" fqn="function.regressdb.public.wib_in(pg_catalog.cstring)" qname="public.wib_in(pg_catalog.cstring)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="wib_in" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.wib_in(pg_catalog.cstring)">
                  <handler-for-type name="wib" schema="public"/>
                  <result type="wib" schema="public"/>
                  <params>
                    <param type="cstring" schema="pg_catalog" mode="i" position="1"/>
                  </params>
                  <source>charin</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.wib_in(pg_catalog.cstring).execute" qname="" parent="function.regressdb.public.wib_in(pg_catalog.cstring)" pqn="grant.function.regressdb.public.wib_in(pg_catalog.cstring).execute:regress" subtype="function" on="public.wib_in(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.wib_in(pg_catalog.cstring).execute:public" qname="" parent="function.regressdb.public.wib_in(pg_catalog.cstring)" pqn="grant.function.regressdb.public.wib_in(pg_catalog.cstring).execute:public" subtype="function" on="public.wib_in(pg_catalog.cstring)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib_in(pg_catalog.cstring)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="wib_lt" fqn="function.regressdb.public.wib_lt(public.wib,public.wib)" qname="public.wib_lt(public.wib,public.wib)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="wib_lt" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.wib_lt(public.wib,public.wib)">
                  <result type="bool" schema="pg_catalog"/>
                  <params>
                    <param type="wib" schema="public" mode="i" position="1"/>
                    <param type="wib" schema="public" mode="i" position="2"/>
                  </params>
                  <source>text_lt</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.wib_lt(public.wib,public.wib).execute" qname="" parent="function.regressdb.public.wib_lt(public.wib,public.wib)" pqn="grant.function.regressdb.public.wib_lt(public.wib,public.wib).execute:regress" subtype="function" on="public.wib_lt(public.wib,public.wib)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib_lt(public.wib,public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib_lt(public.wib,public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.wib_lt(public.wib,public.wib).execute:public" qname="" parent="function.regressdb.public.wib_lt(public.wib,public.wib)" pqn="grant.function.regressdb.public.wib_lt(public.wib,public.wib).execute:public" subtype="function" on="public.wib_lt(public.wib,public.wib)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib_lt(public.wib,public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib_lt(public.wib,public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="wib_out" fqn="function.regressdb.public.wib_out(public.wib)" qname="public.wib_out(public.wib)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib_in(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.wib_in(pg_catalog.cstring)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="wib_out" schema="public" owner="regress" language="internal" is_strict="yes" volatility="immutable" cost="1" signature="public.wib_out(public.wib)">
                  <handler-for-type name="wib" schema="public" type_input_signature="public.wib_in(pg_catalog.cstring)"/>
                  <result type="cstring" schema="pg_catalog"/>
                  <params>
                    <param type="wib" schema="public" mode="i" position="1"/>
                  </params>
                  <source>charout</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.wib_out(public.wib).execute" qname="" parent="function.regressdb.public.wib_out(public.wib)" pqn="grant.function.regressdb.public.wib_out(public.wib).execute:regress" subtype="function" on="public.wib_out(public.wib)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib_out(public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib_out(public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.wib_out(public.wib).execute:public" qname="" parent="function.regressdb.public.wib_out(public.wib)" pqn="grant.function.regressdb.public.wib_out(public.wib).execute:public" subtype="function" on="public.wib_out(public.wib)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.public.wib_out(public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib"/>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.public.wib_out(public.wib)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                      <dependency fqn="type.regressdb.public.wib"/>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="aggregate" name="mysum" fqn="function.regressdb.mysum(pg_catalog.int4)" qname="public.mysum(pg_catalog.int4)" parent="schema.regressdb.public" diff="rebuild">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.addnint4(pg_catalog.int4,pg_catalog.int4)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="transfunc">
                  <transfunc name="addnint4" schema="public"/>
                  <attribute name="name" status="diff" old="addint4" new="addnint4"/>
                </element>
                <aggregate name="mysum" signature="mysum(pg_catalog.int4)" schema="public" owner="regress" initcond="'0'">
                  <basetype name="int4" schema="pg_catalog"/>
                  <transtype name="int4" schema="pg_catalog"/>
                  <transfunc name="addnint4" schema="public"/>
                </aggregate>
              </dbobject>
              <dbobject type="aggregate" name="mysum2" fqn="function.regressdb.mysum2(pg_catalog.int4)" qname="public.mysum2(pg_catalog.int4)" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.public.addkint4(pg_catalog.int4,pg_catalog.int4)"/>
                  <dependency fqn="role.wibble"/>
                  <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:wibble"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.wibble.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.regress.wibble" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.regress.superuser"/>
                  <dependency pqn="grant.role.regress.wibble"/>
                </dependency-set>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="wibble" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="regress" new="wibble"/>
                <element status="new" type="comment">
                  <comment>'aggregate comment'</comment>
                </element>
                <aggregate name="mysum2" signature="mysum2(pg_catalog.int4)" schema="public" owner="wibble" initcond="'0'">
                  <basetype name="int4" schema="pg_catalog"/>
                  <transtype name="int4" schema="pg_catalog"/>
                  <transfunc name="addkint4" schema="public"/>
                  <comment>'aggregate comment'</comment>
                </aggregate>
              </dbobject>
              <dbobject type="operator" name="&lt;" fqn="operator.regressdb.public.&lt;(public.seg,public.seg)" qname="public.&lt;(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_lt(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_lt(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <operator name="&lt;" schema="public" owner="regress">
                  <arg position="left" name="seg" schema="public"/>
                  <arg position="right" name="seg" schema="public"/>
                  <result name="bool" schema="pg_catalog"/>
                  <procedure name="seg_lt" schema="public" signature="public.seg_lt(public.seg,public.seg)"/>
                  <commutator name="&gt;" schema="public"/>
                  <negator name="&gt;=" schema="public"/>
                  <restrict name="scalarltsel" schema="pg_catalog" signature="pg_catalog.scalarltsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.integer)"/>
                  <join name="scalarltjoinsel" schema="pg_catalog" signature="pg_catalog.scalarltjoinsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.smallint)"/>
                </operator>
              </dbobject>
              <dbobject type="operator" name="&lt;" fqn="operator.regressdb.public.&lt;(public.wib,public.wib)" qname="public.&lt;(public.wib,public.wib)" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="function.regressdb.public.wib_lt(public.wib,public.wib)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="function.regressdb.public.wib_lt(public.wib,public.wib)"/>
                  <dependency fqn="role.wibble"/>
                  <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:wibble"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.wibble.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.regress.wibble" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.regress.superuser"/>
                  <dependency pqn="grant.role.regress.wibble"/>
                </dependency-set>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="wibble" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="regress" new="wibble"/>
                <element status="diff" type="comment">
                  <comment>'this is wib &lt; wib with a differnt comment'</comment>
                  <diffs>
                    <text>
                      <old>'this is wib &lt; wib'</old>
                      <new>'this is wib &lt; wib with a differnt comment'</new>
                    </text>
                  </diffs>
                </element>
                <operator name="&lt;" schema="public" owner="wibble">
                  <arg position="left" name="wib" schema="public"/>
                  <arg position="right" name="wib" schema="public"/>
                  <result name="bool" schema="pg_catalog"/>
                  <procedure name="wib_lt" schema="public" signature="public.wib_lt(public.wib,public.wib)"/>
                  <commutator name="&gt;=" schema="public"/>
                  <negator name="&gt;" schema="public"/>
                  <restrict name="scalarltsel" schema="pg_catalog" signature="pg_catalog.scalarltsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.integer)"/>
                  <join name="scalarltjoinsel" schema="pg_catalog" signature="pg_catalog.scalarltjoinsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.smallint)"/>
                  <comment>'this is wib &lt; wib with a differnt comment'</comment>
                </operator>
              </dbobject>
              <dbobject type="operator" name="&lt;&lt;" fqn="operator.regressdb.public.&lt;&lt;(public.seg,public.seg)" qname="public.&lt;&lt;(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_left(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_left(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <operator name="&lt;&lt;" schema="public" owner="regress">
                  <arg position="left" name="seg" schema="public"/>
                  <arg position="right" name="seg" schema="public"/>
                  <result name="bool" schema="pg_catalog"/>
                  <procedure name="seg_left" schema="public" signature="public.seg_left(public.seg,public.seg)"/>
                  <commutator name="&gt;&gt;" schema="public"/>
                  <restrict name="positionsel" schema="pg_catalog" signature="pg_catalog.positionsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.integer)"/>
                  <join name="positionjoinsel" schema="pg_catalog" signature="pg_catalog.positionjoinsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.smallint)"/>
                </operator>
              </dbobject>
              <dbobject type="operator" name="&lt;=" fqn="operator.regressdb.public.&lt;=(public.wib,public.wib)" qname="public.&lt;=(public.wib,public.wib)" parent="schema.regressdb.public" diff="rebuild">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="function.regressdb.public.wib_lt(public.wib,public.wib)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="type.regressdb.public.wib"/>
                  <dependency fqn="function.regressdb.public.wib_gt(public.wib,public.wib)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="procedure">
                  <procedure name="wib_gt" schema="public" signature="public.wib_gt(public.wib,public.wib)"/>
                  <attribute name="signature" status="diff" old="public.wib_lt(public.wib,public.wib)" new="public.wib_gt(public.wib,public.wib)"/>
                </element>
                <operator name="&lt;=" schema="public" owner="regress">
                  <arg position="left" name="wib" schema="public"/>
                  <arg position="right" name="wib" schema="public"/>
                  <result name="bool" schema="pg_catalog"/>
                  <procedure name="wib_gt" schema="public" signature="public.wib_gt(public.wib,public.wib)"/>
                  <commutator name="&gt;" schema="public"/>
                  <negator name="&gt;=" schema="public"/>
                  <restrict name="scalarltsel" schema="pg_catalog" signature="pg_catalog.scalarltsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.integer)"/>
                  <join name="scalarltjoinsel" schema="pg_catalog" signature="pg_catalog.scalarltjoinsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.smallint)"/>
                </operator>
              </dbobject>
              <dbobject type="operator" name="&lt;=" fqn="operator.regressdb.public.&lt;=(public.seg,public.seg)" qname="public.&lt;=(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_le(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_le(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <operator name="&lt;=" schema="public" owner="regress">
                  <arg position="left" name="seg" schema="public"/>
                  <arg position="right" name="seg" schema="public"/>
                  <result name="bool" schema="pg_catalog"/>
                  <procedure name="seg_le" schema="public" signature="public.seg_le(public.seg,public.seg)"/>
                  <commutator name="&gt;=" schema="public"/>
                  <negator name="&gt;" schema="public"/>
                  <restrict name="scalarltsel" schema="pg_catalog" signature="pg_catalog.scalarltsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.integer)"/>
                  <join name="scalarltjoinsel" schema="pg_catalog" signature="pg_catalog.scalarltjoinsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.smallint)"/>
                </operator>
              </dbobject>
              <dbobject type="operator" name="&lt;&gt;" fqn="operator.regressdb.public.&lt;&gt;(public.seg,public.seg)" qname="public.&lt;&gt;(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_different(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_different(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <operator name="&lt;&gt;" schema="public" owner="regress">
                  <arg position="left" name="seg" schema="public"/>
                  <arg position="right" name="seg" schema="public"/>
                  <result name="bool" schema="pg_catalog"/>
                  <procedure name="seg_different" schema="public" signature="public.seg_different(public.seg,public.seg)"/>
                  <commutator name="&lt;&gt;" schema="public"/>
                  <negator name="=" schema="public"/>
                  <restrict name="neqsel" schema="pg_catalog" signature="pg_catalog.neqsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.integer)"/>
                  <join name="neqjoinsel" schema="pg_catalog" signature="pg_catalog.neqjoinsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.smallint)"/>
                </operator>
              </dbobject>
              <dbobject type="operator" name="=" fqn="operator.regressdb.public.=(public.seg,public.seg)" qname="public.=(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_same(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_same(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <operator name="=" schema="public" owner="regress" merges="yes">
                  <arg position="left" name="seg" schema="public"/>
                  <arg position="right" name="seg" schema="public"/>
                  <result name="bool" schema="pg_catalog"/>
                  <procedure name="seg_same" schema="public" signature="public.seg_same(public.seg,public.seg)"/>
                  <commutator name="=" schema="public"/>
                  <negator name="&lt;&gt;" schema="public"/>
                  <restrict name="eqsel" schema="pg_catalog" signature="pg_catalog.eqsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.integer)"/>
                  <join name="eqjoinsel" schema="pg_catalog" signature="pg_catalog.eqjoinsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.smallint)"/>
                </operator>
              </dbobject>
              <dbobject type="operator" name="&gt;" fqn="operator.regressdb.public.&gt;(public.seg,public.seg)" qname="public.&gt;(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_gt(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_gt(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <operator name="&gt;" schema="public" owner="regress">
                  <arg position="left" name="seg" schema="public"/>
                  <arg position="right" name="seg" schema="public"/>
                  <result name="bool" schema="pg_catalog"/>
                  <procedure name="seg_gt" schema="public" signature="public.seg_gt(public.seg,public.seg)"/>
                  <commutator name="&lt;" schema="public"/>
                  <negator name="&lt;=" schema="public"/>
                  <restrict name="scalargtsel" schema="pg_catalog" signature="pg_catalog.scalargtsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.integer)"/>
                  <join name="scalargtjoinsel" schema="pg_catalog" signature="pg_catalog.scalargtjoinsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.smallint)"/>
                </operator>
              </dbobject>
              <dbobject type="operator" name="&gt;=" fqn="operator.regressdb.public.&gt;=(public.seg,public.seg)" qname="public.&gt;=(public.seg,public.seg)" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_ge(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="type.regressdb.public.seg"/>
                  <dependency fqn="function.regressdb.public.seg_ge(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <operator name="&gt;=" schema="public" owner="regress">
                  <arg position="left" name="seg" schema="public"/>
                  <arg position="right" name="seg" schema="public"/>
                  <result name="bool" schema="pg_catalog"/>
                  <procedure name="seg_ge" schema="public" signature="public.seg_ge(public.seg,public.seg)"/>
                  <commutator name="&lt;=" schema="public"/>
                  <negator name="&lt;" schema="public"/>
                  <restrict name="scalargtsel" schema="pg_catalog" signature="pg_catalog.scalargtsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.integer)"/>
                  <join name="scalargtjoinsel" schema="pg_catalog" signature="pg_catalog.scalargtjoinsel(pg_catalog.internal,pg_catalog.oid,pg_catalog.internal,pg_catalog.smallint)"/>
                </operator>
              </dbobject>
              <dbobject type="operator_class" name="seg_ops" fqn="operator_class.regressdb.public.seg_ops(btree)" qname="public.seg_ops" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="operator_family.regressdb.public.seg_ops(btree)"/>
                  <dependency fqn="operator.regressdb.public.&gt;(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.=(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&lt;(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&lt;=(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&gt;=(public.seg,public.seg)"/>
                  <dependency fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="operator_family.regressdb.public.seg_ops(btree)"/>
                  <dependency fqn="operator.regressdb.public.&gt;(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.=(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&lt;(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&lt;=(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&gt;=(public.seg,public.seg)"/>
                  <dependency fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)"/>
                  <dependency fqn="role.wibble"/>
                  <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:wibble"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.wibble.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.regress.wibble" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.regress.superuser"/>
                  <dependency pqn="grant.role.regress.wibble"/>
                </dependency-set>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="wibble" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="regress" new="wibble"/>
                <element status="diff" type="comment">
                  <comment>'operator class for seg_ops with changed comment'</comment>
                  <diffs>
                    <text>
                      <old>'operator class for seg_ops'</old>
                      <new>'operator class for seg_ops with changed comment'</new>
                    </text>
                  </diffs>
                </element>
                <operator_class name="seg_ops" schema="public" owner="wibble" is_default="t" intype_name="seg" intype_schema="public" family="seg_ops" family_schema="public" method="btree" generates_opfamily="t">
                  <comment>'operator class for seg_ops with changed comment'</comment>
                  <opclass_operator name="&gt;" schema="public" strategy="5">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_operator name="=" schema="public" strategy="3">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_operator name="&lt;" schema="public" strategy="1">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_operator name="&lt;=" schema="public" strategy="2">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_operator name="&gt;=" schema="public" strategy="4">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_function name="seg_cmp" schema="public" proc_num="1" function="public.seg_cmp(public.seg,public.seg)">
                    <params>
                      <param type="seg" schema="public" position="1"/>
                      <param type="seg" schema="public" position="2"/>
                    </params>
                  </opclass_function>
                </operator_class>
              </dbobject>
              <dbobject type="operator_class" name="seg_ops2" fqn="operator_class.regressdb.public.seg_ops2(btree)" qname="public.seg_ops2" parent="schema.regressdb.public" diff="rebuild">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="operator_family.regressdb.public.seg_ops2(btree)"/>
                  <dependency fqn="operator.regressdb.public.&gt;(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.=(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&lt;(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&lt;=(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&gt;=(public.seg,public.seg)"/>
                  <dependency fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="operator_family.regressdb.public.seg_ops2(btree)"/>
                  <dependency fqn="operator.regressdb.public.&gt;(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.=(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&lt;(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&lt;=(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&gt;=(public.seg,public.seg)"/>
                  <dependency fqn="function.regressdb.public.seg_cmp2(public.seg,public.seg)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="opclass_function" key="proc_num">
                  <opclass_function name="seg_cmp2" schema="public" proc_num="1" function="public.seg_cmp2(public.seg,public.seg)">
                    <params>
                      <param type="seg" schema="public" position="1"/>
                      <param type="seg" schema="public" position="2"/>
                    </params>
                  </opclass_function>
                  <attribute name="function" status="diff" old="public.seg_cmp(public.seg,public.seg)" new="public.seg_cmp2(public.seg,public.seg)"/>
                </element>
                <operator_class name="seg_ops2" schema="public" owner="regress" is_default="f" intype_name="seg" intype_schema="public" family="seg_ops2" family_schema="public" method="btree" generates_opfamily="t">
                  <comment>'operator class for seg_ops2'</comment>
                  <opclass_operator name="&gt;" schema="public" strategy="5">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_operator name="=" schema="public" strategy="3">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_operator name="&lt;" schema="public" strategy="1">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_operator name="&lt;=" schema="public" strategy="2">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_operator name="&gt;=" schema="public" strategy="4">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opclass_operator>
                  <opclass_function name="seg_cmp2" schema="public" proc_num="1" function="public.seg_cmp2(public.seg,public.seg)">
                    <params>
                      <param type="seg" schema="public" position="1"/>
                      <param type="seg" schema="public" position="2"/>
                    </params>
                  </opclass_function>
                </operator_class>
              </dbobject>
              <dbobject type="operator_family" fqn="operator_family.regressdb.public.seg_ops2(btree)" name="seg_ops2" qname="public.seg_ops2" parent="schema.regressdb.public" owner_is_superuser="superuser" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="2" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]">
                    <dependency fqn="privilege.role.marc.superuser"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="2" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]">
                    <dependency fqn="privilege.role.marc.superuser"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <operator_family name="seg_ops2" schema="public" owner="regress" method="btree" auto_generated="t"/>
              </dbobject>
              <dbobject type="operator_family" fqn="operator_family.regressdb.public.seg_ops(btree)" name="seg_ops" qname="public.seg_ops" parent="schema.regressdb.public" owner_is_superuser="" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="2" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]">
                    <dependency fqn="privilege.role.marc.superuser"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.wibble"/>
                  <dependency-set priority="2" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]">
                    <dependency fqn="privilege.role.marc.superuser"/>
                    <dependency fqn="privilege.role.wibble.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:wibble"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.wibble.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.regress.wibble" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.regress.superuser"/>
                  <dependency pqn="grant.role.regress.wibble"/>
                </dependency-set>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="marc" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="regress" new="wibble"/>
                <element status="diff" type="comment">
                  <comment>'operator family for seg_ops with updated comment'</comment>
                  <diffs>
                    <text>
                      <old>'operator family for seg_ops'</old>
                      <new>'operator family for seg_ops with updated comment'</new>
                    </text>
                  </diffs>
                </element>
                <operator_family name="seg_ops" schema="public" owner="wibble" method="btree" auto_generated="t">
                  <comment>'operator family for seg_ops with updated comment'</comment>
                </operator_family>
              </dbobject>
              <dbobject type="comment" fqn="comment.regressdb.public.seg_ops(btree)" name="seg_ops" qname="public.seg_ops" nolist="true" method="btree" parent="schema.regressdb.public" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="operator_class.regressdb.public.seg_ops(btree)"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="operator_class.regressdb.public.seg_ops(btree)"/>
                </dependencies>
                <comment/>
              </dbobject>
              <dbobject type="operator_family" fqn="operator_family.regressdb.public.seg_ops3(btree)" name="seg_ops3" qname="public.seg_ops3" parent="schema.regressdb.public" owner_is_superuser="superuser" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency fqn="operator.regressdb.public.&lt;(public.seg,public.seg)"/>
                  <dependency fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)"/>
                  <dependency-set priority="2" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]">
                    <dependency fqn="privilege.role.marc.superuser"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.regress"/>
                  <dependency fqn="operator.regressdb.public.&lt;=(public.seg,public.seg)"/>
                  <dependency-set priority="2" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]">
                    <dependency fqn="privilege.role.marc.superuser"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="gone" type="opfamily_operator" key="strategy">
                  <opfamily_operator name="&lt;" schema="public" strategy="1">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opfamily_operator>
                </element>
                <element status="new" type="opfamily_operator" key="strategy">
                  <opfamily_operator name="&lt;=" schema="public" strategy="2">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opfamily_operator>
                </element>
                <element status="gone" type="opfamily_function" key="proc_num">
                  <opfamily_function name="seg_cmp" schema="public" proc_num="1" function="public.seg_cmp(public.seg,public.seg)">
                    <params>
                      <param type="seg" schema="public" position="1"/>
                      <param type="seg" schema="public" position="2"/>
                    </params>
                  </opfamily_function>
                </element>
                <element status="gone" type="comment">
                  <comment>'operator family seg_ops3'</comment>
                </element>
                <operator_family name="seg_ops3" schema="public" owner="regress" method="btree" auto_generated="f">
                  <opfamily_operator name="&lt;=" schema="public" strategy="2">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opfamily_operator>
                </operator_family>
              </dbobject>
              <dbobject type="conversion" name="myconv" fqn="conversion.regressdb.public.myconv" qname="public.myconv" parent="schema.regressdb.public" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)"/>
                  <dependency fqn="role.keep"/>
                  <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:keep"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.regress.keep" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.regress.superuser"/>
                  <dependency pqn="grant.role.regress.keep"/>
                </dependency-set>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="keep" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="regress" new="keep"/>
                <element status="diff" type="comment">
                  <comment>'conversion comment has changed'</comment>
                  <diffs>
                    <text>
                      <old>'conversion comment'</old>
                      <new>'conversion comment has changed'</new>
                    </text>
                  </diffs>
                </element>
                <conversion name="myconv" schema="public" owner="keep" source="SQL_ASCII" destination="MULE_INTERNAL" is_default="f" function_name="myconv" function_schema="schema2">
                  <depends function="schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)"/>
                  <comment>'conversion comment has changed'</comment>
                </conversion>
              </dbobject>
              <dbobject type="function" name="addint4" fqn="function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4)" qname="public.addint4(pg_catalog.int4,pg_catalog.int4)" parent="schema.regressdb.public" diff="gone">
                <dependencies>
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc"/>
                <function name="addint4" schema="public" owner="regress" language="plpgsql" volatility="stable" cost="5" signature="public.addint4(pg_catalog.int4,pg_catalog.int4)">
                  <result type="int4" schema="pg_catalog"/>
                  <params>
                    <param type="int4" schema="pg_catalog" name="_state" mode="i" position="1"/>
                    <param type="int4" schema="pg_catalog" name="_next" mode="i" position="2"/>
                  </params>
                  <source>
begin
  return _state + _next;
end;
</source>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4).execute:public" qname="" parent="function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4)" pqn="grant.function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4).execute:public" subtype="function" on="public.addint4(pg_catalog.int4,pg_catalog.int4)" diff="gone">
                    <dependencies>
                      <dependency fqn="function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4).execute" qname="" parent="function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4)" pqn="grant.function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4).execute:regress" subtype="function" on="public.addint4(pg_catalog.int4,pg_catalog.int4)" diff="gone">
                    <dependencies>
                      <dependency fqn="function.regressdb.public.addint4(pg_catalog.int4,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.public.usage"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.public.create"/>
                        <dependency pqn="grant.schema.regressdb.public.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.public.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="operator_family" fqn="operator_family.regressdb.public.seg_ops4(btree)" name="seg_ops4" qname="public.seg_ops4" parent="schema.regressdb.public" owner_is_superuser="" diff="gone">
                <dependencies>
                  <dependency fqn="schema.regressdb.public"/>
                  <dependency fqn="role.keep"/>
                  <dependency fqn="operator.regressdb.public.&lt;(public.seg,public.seg)"/>
                  <dependency fqn="operator.regressdb.public.&lt;=(public.seg,public.seg)"/>
                  <dependency fqn="function.regressdb.public.seg_cmp(public.seg,public.seg)"/>
                  <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.public.create:keep"/>
                    <dependency pqn="grant.schema.regressdb.public.create:public"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.public.usage:keep"/>
                    <dependency pqn="grant.schema.regressdb.public.usage:public"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                  <dependency-set priority="2" fallback="privilege.role.marc.superuser" parent="ancestor::dbobject[database]">
                    <dependency fqn="privilege.role.marc.superuser"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="marc" default="marc"/>
                <operator_family name="seg_ops4" schema="public" owner="keep" method="btree" auto_generated="f">
                  <comment>'operator family seg_ops4'</comment>
                  <opfamily_operator name="&lt;" schema="public" strategy="1">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opfamily_operator>
                  <opfamily_operator name="&lt;=" schema="public" strategy="2">
                    <arg position="left" name="seg" schema="public"/>
                    <arg position="right" name="seg" schema="public"/>
                  </opfamily_operator>
                  <opfamily_function name="seg_cmp" schema="public" proc_num="1" function="public.seg_cmp(public.seg,public.seg)">
                    <params>
                      <param type="seg" schema="public" position="1"/>
                      <param type="seg" schema="public" position="2"/>
                    </params>
                  </opfamily_function>
                </operator_family>
              </dbobject>
            </schema>
          </dbobject>
          <dbobject type="schema" name="wibble2" fqn="schema.regressdb.wibble2" qname="wibble2" parent="database.regressdb" diff="diff">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <element status="new" type="comment">
              <comment>'wibble2'</comment>
            </element>
            <schema name="wibble2" owner="regress" privs="{regress=UC/regress}">
              <comment>'wibble2'</comment>
              <dbobject type="grant" name="usage:regress" fqn="grant.schema.regressdb.wibble2.usage" qname="" parent="schema.regressdb.wibble2" pqn="grant.schema.regressdb.wibble2.usage:regress" subtype="schema" on="wibble2" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble2"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble2"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <grant from="regress" to="regress" with_grant="no" priv="usage" automatic="yes"/>
              </dbobject>
              <dbobject type="grant" name="create:regress" fqn="grant.schema.regressdb.wibble2.create" qname="" parent="schema.regressdb.wibble2" pqn="grant.schema.regressdb.wibble2.create:regress" subtype="schema" on="wibble2" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble2"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble2"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <grant from="regress" to="regress" with_grant="no" priv="create" automatic="yes"/>
              </dbobject>
              <dbobject type="grant" name="create:keep" fqn="grant.schema.regressdb.wibble2.create:keep" qname="" parent="schema.regressdb.wibble2" pqn="grant.schema.regressdb.wibble2.create:keep" subtype="schema" on="wibble2" diff="gone">
                <dependencies>
                  <dependency fqn="schema.regressdb.wibble2"/>
                  <dependency fqn="role.keep"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc"/>
                <grant from="regress" to="keep" with_grant="no" priv="create"/>
              </dbobject>
            </schema>
          </dbobject>
          <dbobject type="schema" name="schema2" fqn="schema.regressdb.schema2" qname="schema2" parent="database.regressdb" diff="diff">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <element status="diff" type="comment">
              <comment>'This is wibble3 again'</comment>
              <diffs>
                <text>
                  <old>'This is schema2'</old>
                  <new>'This is wibble3 again'</new>
                </text>
              </diffs>
            </element>
            <schema name="schema2" owner="regress" privs="{regress=UC/regress}">
              <comment>'This is wibble3 again'</comment>
              <dbobject type="grant" name="usage:regress" fqn="grant.schema.regressdb.schema2.usage" qname="" parent="schema.regressdb.schema2" pqn="grant.schema.regressdb.schema2.usage:regress" subtype="schema" on="schema2" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.schema2"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.schema2"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <grant from="regress" to="regress" with_grant="no" priv="usage" automatic="yes"/>
              </dbobject>
              <dbobject type="grant" name="create:regress" fqn="grant.schema.regressdb.schema2.create" qname="" parent="schema.regressdb.schema2" pqn="grant.schema.regressdb.schema2.create:regress" subtype="schema" on="schema2" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.schema2"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.schema2"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <grant from="regress" to="regress" with_grant="no" priv="create" automatic="yes"/>
              </dbobject>
              <dbobject type="type" name="yesno" fqn="type.regressdb.schema2.yesno" qname="schema2.yesno" parent="schema.regressdb.schema2" diff="rebuild">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.schema2"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency fqn="grant.schema.regressdb.schema2.usage"/>
                    <dependency pqn="grant.schema.regressdb.schema2.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.schema2"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency fqn="grant.schema.regressdb.schema2.create"/>
                    <dependency pqn="grant.schema.regressdb.schema2.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.schema2.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="label" key="seq_no">
                  <label label="'yes'" seq_no="1"/>
                  <attribute name="label" status="diff" old="'no'" new="'yes'"/>
                </element>
                <element status="diff" type="label" key="seq_no">
                  <label label="'no'" seq_no="2"/>
                  <attribute name="label" status="diff" old="'yes'" new="'no'"/>
                </element>
                <element status="gone" type="comment">
                  <comment>'boolean-ish'</comment>
                </element>
                <type subtype="enum" is_defined="t" name="yesno" schema="schema2" owner="regress">
                  <label label="'yes'" seq_no="1"/>
                  <label label="'no'" seq_no="2"/>
                </type>
              </dbobject>
              <dbobject type="function" name="myconv" fqn="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)" qname="schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)" parent="schema.regressdb.schema2" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.schema2"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency fqn="grant.schema.regressdb.schema2.usage"/>
                    <dependency pqn="grant.schema.regressdb.schema2.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.schema2"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency fqn="grant.schema.regressdb.schema2.create"/>
                    <dependency pqn="grant.schema.regressdb.schema2.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.schema2.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <function name="myconv" schema="schema2" owner="regress" language="c" volatility="volatile" bin="$libdir/ascii_and_mic" cost="1" signature="schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)">
                  <result type="void" schema="pg_catalog"/>
                  <params>
                    <param type="int4" schema="pg_catalog" mode="i" position="1"/>
                    <param type="int4" schema="pg_catalog" mode="i" position="2"/>
                    <param type="cstring" schema="pg_catalog" mode="i" position="3"/>
                    <param type="internal" schema="pg_catalog" mode="i" position="4"/>
                    <param type="int4" schema="pg_catalog" mode="i" position="5"/>
                  </params>
                  <source>ascii_to_mic</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4).execute" qname="" parent="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)" pqn="grant.function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4).execute:regress" subtype="function" on="schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.schema2.usage"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.schema2.create"/>
                        <dependency pqn="grant.schema.regressdb.schema2.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.schema2.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.schema2.usage"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.schema2.create"/>
                        <dependency pqn="grant.schema.regressdb.schema2.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.schema2.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4).execute:public" qname="" parent="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)" pqn="grant.function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4).execute:public" subtype="function" on="schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.schema2.usage"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.schema2.create"/>
                        <dependency pqn="grant.schema.regressdb.schema2.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.schema2.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.schema2.usage"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.schema2.create"/>
                        <dependency pqn="grant.schema.regressdb.schema2.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.schema2.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="conversion" name="myconv2" fqn="conversion.regressdb.schema2.myconv2" qname="schema2.myconv2" parent="schema.regressdb.schema2" diff="new">
                <dependencies>
                  <dependency fqn="schema.regressdb.schema2"/>
                  <dependency fqn="function.regressdb.schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)"/>
                  <dependency fqn="role.keep"/>
                  <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.schema2.create:keep"/>
                    <dependency pqn="grant.schema.regressdb.schema2.create:public"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.schema2.usage:keep"/>
                    <dependency pqn="grant.schema.regressdb.schema2.usage:public"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="keep" default="marc"/>
                <conversion name="myconv2" schema="schema2" owner="keep" source="SQL_ASCII" destination="MULE_INTERNAL" is_default="f" function_name="myconv" function_schema="schema2">
                  <depends function="schema2.myconv(pg_catalog.int4,pg_catalog.int4,pg_catalog.cstring,pg_catalog.internal,pg_catalog.int4)"/>
                  <comment>'New conversion'</comment>
                </conversion>
              </dbobject>
            </schema>
          </dbobject>
          <dbobject type="schema" name="wibble" fqn="schema.regressdb.wibble" qname="wibble" parent="database.regressdb" diff="diff">
            <dependencies direction="backwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <dependencies direction="forwards">
              <dependency fqn="database.regressdb"/>
              <dependency fqn="role.regress"/>
            </dependencies>
            <context type="owner" value="regress" default="marc" direction="backwards"/>
            <context type="owner" value="regress" default="marc" direction="forwards"/>
            <element status="gone" type="comment">
              <comment>'This is owned by regress'</comment>
            </element>
            <schema name="wibble" owner="regress" privs="{regress=UC/regress}">
              <dbobject type="grant" name="usage:regress" fqn="grant.schema.regressdb.wibble.usage" qname="" parent="schema.regressdb.wibble" pqn="grant.schema.regressdb.wibble.usage:regress" subtype="schema" on="wibble" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <grant from="regress" to="regress" with_grant="no" priv="usage" automatic="yes"/>
              </dbobject>
              <dbobject type="grant" name="create:regress" fqn="grant.schema.regressdb.wibble.create" qname="" parent="schema.regressdb.wibble" pqn="grant.schema.regressdb.wibble.create:regress" subtype="schema" on="wibble" diff="none">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="role.regress"/>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <grant from="regress" to="regress" with_grant="no" priv="create" automatic="yes"/>
              </dbobject>
              <dbobject type="function" name="fn1" fqn="function.regressdb.wibble.fn1(pg_catalog.text)" qname="wibble.fn1(pg_catalog.text)" parent="schema.regressdb.wibble" diff="new">
                <dependencies>
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency fqn="grant.schema.regressdb.wibble.create"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc"/>
                <function name="fn1" schema="wibble" owner="regress" language="plpgsql" is_strict="yes" volatility="stable" cost="100" signature="wibble.fn1(pg_catalog.text)">
                  <result type="varchar" schema="pg_catalog"/>
                  <params>
                    <param type="text" schema="pg_catalog" name="p1" mode="i" position="1"/>
                  </params>
                  <source>
begin
  return p1;
end
</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.wibble.fn1(pg_catalog.text).execute" qname="" parent="function.regressdb.wibble.fn1(pg_catalog.text)" pqn="grant.function.regressdb.wibble.fn1(pg_catalog.text).execute:regress" subtype="function" on="wibble.fn1(pg_catalog.text)" diff="new">
                    <dependencies>
                      <dependency fqn="function.regressdb.wibble.fn1(pg_catalog.text)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.wibble.fn1(pg_catalog.text).execute:public" qname="" parent="function.regressdb.wibble.fn1(pg_catalog.text)" pqn="grant.function.regressdb.wibble.fn1(pg_catalog.text).execute:public" subtype="function" on="wibble.fn1(pg_catalog.text)" diff="new">
                    <dependencies>
                      <dependency fqn="function.regressdb.wibble.fn1(pg_catalog.text)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="fn2" fqn="function.regressdb.wibble.fn2(pg_catalog.varchar)" qname="wibble.fn2(pg_catalog.varchar)" parent="schema.regressdb.wibble" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency fqn="grant.schema.regressdb.wibble.create"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="params">
                  <params>
                    <param type="varchar" schema="pg_catalog" name="param" mode="i" position="1"/>
                  </params>
                  <element status="diff" type="param" key="position">
                    <param type="varchar" schema="pg_catalog" name="param" mode="i" position="1"/>
                    <attribute name="name" status="diff" old="p1" new="param"/>
                  </element>
                </element>
                <element status="gone" type="comment">
                  <comment>'Old comment'</comment>
                </element>
                <function name="fn2" schema="wibble" owner="regress" language="plpgsql" is_strict="yes" volatility="stable" cost="100" signature="wibble.fn2(pg_catalog.varchar)">
                  <result type="varchar" schema="pg_catalog"/>
                  <params>
                    <param type="varchar" schema="pg_catalog" name="param" mode="i" position="1"/>
                  </params>
                  <source>
begin
  return 'x';
end
</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.wibble.fn2(pg_catalog.varchar).execute" qname="" parent="function.regressdb.wibble.fn2(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn2(pg_catalog.varchar).execute:regress" subtype="function" on="wibble.fn2(pg_catalog.varchar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn2(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn2(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.wibble.fn2(pg_catalog.varchar).execute:public" qname="" parent="function.regressdb.wibble.fn2(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn2(pg_catalog.varchar).execute:public" subtype="function" on="wibble.fn2(pg_catalog.varchar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn2(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn2(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="fn3" fqn="function.regressdb.wibble.fn3(pg_catalog.varchar)" qname="wibble.fn3(pg_catalog.varchar)" parent="schema.regressdb.wibble" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.wibble"/>
                  <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                    <dependency fqn="privilege.role.wibble.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.wibble"/>
                  <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                    <dependency fqn="privilege.role.wibble.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="wibble" default="marc" direction="backwards"/>
                <context type="owner" value="wibble" default="marc" direction="forwards"/>
                <attribute name="cost" status="diff" old="1000" new="100"/>
                <element status="diff" type="source">
                  <source>
begin
  return 'y';
end
</source>
                  <diffs>
                    <text>
                      <old>
begin
  return 'x';
end
</old>
                      <new>
begin
  return 'y';
end
</new>
                    </text>
                  </diffs>
                </element>
                <function name="fn3" schema="wibble" owner="wibble" language="plpgsql" is_strict="yes" volatility="stable" cost="100" signature="wibble.fn3(pg_catalog.varchar)">
                  <result type="varchar" schema="pg_catalog"/>
                  <params>
                    <param type="varchar" schema="pg_catalog" name="p1" mode="i" position="1"/>
                  </params>
                  <source>
begin
  return 'y';
end
</source>
                  <dbobject type="grant" name="execute:wibble" fqn="grant.function.regressdb.wibble.fn3(pg_catalog.varchar).execute" qname="" parent="function.regressdb.wibble.fn3(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn3(pg_catalog.varchar).execute:wibble" subtype="function" on="wibble.fn3(pg_catalog.varchar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn3(pg_catalog.varchar)"/>
                      <dependency fqn="role.wibble"/>
                      <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.wibble.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn3(pg_catalog.varchar)"/>
                      <dependency fqn="role.wibble"/>
                      <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.wibble.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="wibble" default="marc" direction="backwards"/>
                    <context type="owner" value="wibble" default="marc" direction="forwards"/>
                    <grant from="wibble" to="wibble" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.wibble.fn3(pg_catalog.varchar).execute:public" qname="" parent="function.regressdb.wibble.fn3(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn3(pg_catalog.varchar).execute:public" subtype="function" on="wibble.fn3(pg_catalog.varchar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn3(pg_catalog.varchar)"/>
                      <dependency fqn="role.wibble"/>
                      <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.wibble.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn3(pg_catalog.varchar)"/>
                      <dependency fqn="role.wibble"/>
                      <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.wibble.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="wibble" default="marc" direction="backwards"/>
                    <context type="owner" value="wibble" default="marc" direction="forwards"/>
                    <grant from="wibble" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="fn4" fqn="function.regressdb.wibble.fn4(pg_catalog.varchar)" qname="wibble.fn4(pg_catalog.varchar)" parent="schema.regressdb.wibble" diff="rebuild">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency fqn="grant.schema.regressdb.wibble.create"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="result">
                  <result type="bpchar" schema="pg_catalog"/>
                  <attribute name="type" status="diff" old="varchar" new="bpchar"/>
                </element>
                <function name="fn4" schema="wibble" owner="regress" language="plpgsql" is_strict="yes" volatility="stable" cost="100" signature="wibble.fn4(pg_catalog.varchar)">
                  <result type="bpchar" schema="pg_catalog"/>
                  <params>
                    <param type="varchar" schema="pg_catalog" name="p1" mode="i" position="1"/>
                  </params>
                  <source>
begin
  return 'x';
end
</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.wibble.fn4(pg_catalog.varchar).execute" qname="" parent="function.regressdb.wibble.fn4(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn4(pg_catalog.varchar).execute:regress" subtype="function" on="wibble.fn4(pg_catalog.varchar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn4(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn4(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.wibble.fn4(pg_catalog.varchar).execute:public" qname="" parent="function.regressdb.wibble.fn4(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn4(pg_catalog.varchar).execute:public" subtype="function" on="wibble.fn4(pg_catalog.varchar)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn4(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn4(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="fn5" fqn="function.regressdb.wibble.fn5(pg_catalog.varchar)" qname="wibble.fn5(pg_catalog.varchar)" parent="schema.regressdb.wibble" diff="rebuild">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.keep"/>
                  <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.wibble.usage:keep"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                    <dependency fqn="privilege.role.keep.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.wibble"/>
                  <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                    <dependency fqn="privilege.role.wibble.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.keep.wibble" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.keep.superuser"/>
                  <dependency pqn="grant.role.keep.wibble"/>
                </dependency-set>
                <context type="owner" value="keep" default="marc" direction="backwards"/>
                <context type="owner" value="wibble" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="keep" new="wibble"/>
                <attribute name="cost" status="diff" old="100" new="4"/>
                <element status="diff" type="params">
                  <params>
                    <param type="varchar" schema="pg_catalog" name="p1" mode="b" position="1"/>
                    <param type="varchar" schema="pg_catalog" name="p2" mode="o" position="2"/>
                    <param type="varchar" schema="pg_catalog" name="p3" mode="o" position="3"/>
                  </params>
                  <element status="diff" type="param" key="position">
                    <param type="varchar" schema="pg_catalog" name="p1" mode="b" position="1"/>
                    <attribute name="mode" status="diff" old="i" new="b"/>
                  </element>
                </element>
                <function name="fn5" schema="wibble" owner="wibble" language="plpgsql" is_strict="yes" returns_set="yes" volatility="stable" cost="4" rows="1000" signature="wibble.fn5(pg_catalog.varchar)">
                  <result type="record" schema="pg_catalog"/>
                  <params>
                    <param type="varchar" schema="pg_catalog" name="p1" mode="b" position="1"/>
                    <param type="varchar" schema="pg_catalog" name="p2" mode="o" position="2"/>
                    <param type="varchar" schema="pg_catalog" name="p3" mode="o" position="3"/>
                  </params>
                  <source>
begin
  p2 := p1;
  p3 := p1;
end
</source>
                  <dbobject type="grant" name="execute:wibble" fqn="grant.function.regressdb.wibble.fn5(pg_catalog.varchar).execute" qname="" parent="function.regressdb.wibble.fn5(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn5(pg_catalog.varchar).execute:wibble" subtype="function" on="wibble.fn5(pg_catalog.varchar)" diff="diff">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn5(pg_catalog.varchar)"/>
                      <dependency fqn="role.keep"/>
                      <dependency-set priority="1" fallback="privilege.role.keep.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:keep"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:keep"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.keep.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn5(pg_catalog.varchar)"/>
                      <dependency fqn="role.wibble"/>
                      <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.wibble.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="keep" default="marc" direction="backwards"/>
                    <context type="owner" value="wibble" default="marc" direction="forwards"/>
                    <attribute name="with_grant" status="gone" old="no"/>
                    <grant from="wibble" to="wibble" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.wibble.fn5(pg_catalog.varchar).execute:public" qname="" parent="function.regressdb.wibble.fn5(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn5(pg_catalog.varchar).execute:public" subtype="function" on="wibble.fn5(pg_catalog.varchar)" diff="new">
                    <dependencies>
                      <dependency fqn="function.regressdb.wibble.fn5(pg_catalog.varchar)"/>
                      <dependency fqn="role.wibble"/>
                      <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.wibble.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="wibble" default="marc"/>
                    <grant from="wibble" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="fn6" fqn="function.regressdb.wibble.fn6(pg_catalog.varchar)" qname="wibble.fn6(pg_catalog.varchar)" parent="schema.regressdb.wibble" diff="diff">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.wibble"/>
                  <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                    <dependency fqn="privilege.role.wibble.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency fqn="grant.schema.regressdb.wibble.create"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependency-set fallback="grant.role.wibble.regress" parent="ancestor::dbobject[database]">
                  <dependency fqn="privilege.role.wibble.superuser"/>
                  <dependency pqn="grant.role.wibble.regress"/>
                </dependency-set>
                <context type="owner" value="wibble" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <attribute name="owner" status="diff" old="wibble" new="regress"/>
                <attribute name="volatility" status="diff" old="stable" new="volatile"/>
                <attribute name="cost" status="diff" old="1000" new="100"/>
                <attribute name="rows" status="diff" old="1000" new="4"/>
                <attribute name="security_definer" status="new" new="yes"/>
                <attribute name="is_strict" status="new" new="yes"/>
                <element status="gone" type="config_setting" key="name">
                  <config_setting name="enable_hashagg" setting="off"/>
                </element>
                <element status="diff" type="config_setting" key="name">
                  <config_setting name="enable_mergejoin" setting="on"/>
                  <attribute name="setting" status="diff" old="off" new="on"/>
                </element>
                <element status="new" type="config_setting" key="name">
                  <config_setting name="enable_nestloop" setting="off"/>
                </element>
                <function name="fn6" schema="wibble" owner="regress" language="plpgsql" is_strict="yes" returns_set="yes" volatility="volatile" security_definer="yes" privs="{=X/regress,regress=X/regress,keep=X/regress}" cost="100" rows="4" signature="wibble.fn6(pg_catalog.varchar)">
                  <result type="varchar" schema="pg_catalog"/>
                  <params>
                    <param type="varchar" schema="pg_catalog" name="p1" mode="i" position="1"/>
                  </params>
                  <config_setting name="enable_nestloop" setting="off"/>
                  <config_setting name="enable_mergejoin" setting="on"/>
                  <source>
begin
  return next 'x';
end
</source>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.wibble.fn6(pg_catalog.varchar).execute:public" qname="" parent="function.regressdb.wibble.fn6(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn6(pg_catalog.varchar).execute:public" subtype="function" on="wibble.fn6(pg_catalog.varchar)" diff="diff">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn6(pg_catalog.varchar)"/>
                      <dependency fqn="role.wibble"/>
                      <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.wibble.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn6(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="wibble" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <attribute name="with_grant" status="new" new="no"/>
                    <grant from="regress" to="public" with_grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.wibble.fn6(pg_catalog.varchar).execute" qname="" parent="function.regressdb.wibble.fn6(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn6(pg_catalog.varchar).execute:regress" subtype="function" on="wibble.fn6(pg_catalog.varchar)" diff="diff">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn6(pg_catalog.varchar)"/>
                      <dependency fqn="role.wibble"/>
                      <dependency-set priority="1" fallback="privilege.role.wibble.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:wibble"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.wibble.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn6(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="wibble" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <attribute name="with_grant" status="new" new="no"/>
                    <grant from="regress" to="regress" with_grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:keep" fqn="grant.function.regressdb.wibble.fn6(pg_catalog.varchar).execute:keep" qname="" parent="function.regressdb.wibble.fn6(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn6(pg_catalog.varchar).execute:keep" subtype="function" on="wibble.fn6(pg_catalog.varchar)" diff="new">
                    <dependencies>
                      <dependency fqn="function.regressdb.wibble.fn6(pg_catalog.varchar)"/>
                      <dependency fqn="role.keep"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="keep" with_grant="no" priv="execute"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="fn7" fqn="function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)" qname="wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)" parent="schema.regressdb.wibble" diff="rebuild">
                <dependencies direction="backwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <dependencies direction="forwards">
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency fqn="grant.schema.regressdb.wibble.create"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc" direction="backwards"/>
                <context type="owner" value="regress" default="marc" direction="forwards"/>
                <element status="diff" type="params">
                  <params>
                    <param type="varchar" schema="pg_catalog" name="p1" mode="i" position="1"/>
                    <param type="varchar" schema="pg_catalog" name="p2" mode="i" position="2"/>
                    <param type="int4" schema="pg_catalog" name="p3" mode="i" position="3" default="0"/>
                    <param type="bool" schema="pg_catalog" name="p4" mode="i" position="4" default="false"/>
                  </params>
                  <element status="diff" type="param" key="position">
                    <param type="varchar" schema="pg_catalog" name="p2" mode="i" position="2"/>
                    <attribute name="default" status="gone" old="'a,b'::character varying"/>
                  </element>
                  <element status="diff" type="param" key="position">
                    <param type="bool" schema="pg_catalog" name="p4" mode="i" position="4" default="false"/>
                    <attribute name="default" status="diff" old="true" new="false"/>
                  </element>
                </element>
                <function name="fn7" schema="wibble" owner="regress" language="plpgsql" volatility="stable" cost="100" signature="wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)">
                  <result type="varchar" schema="pg_catalog"/>
                  <params>
                    <param type="varchar" schema="pg_catalog" name="p1" mode="i" position="1"/>
                    <param type="varchar" schema="pg_catalog" name="p2" mode="i" position="2"/>
                    <param type="int4" schema="pg_catalog" name="p3" mode="i" position="3" default="0"/>
                    <param type="bool" schema="pg_catalog" name="p4" mode="i" position="4" default="false"/>
                  </params>
                  <source>
begin
  return 'x';
end
</source>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool).execute" qname="" parent="function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)" pqn="grant.function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool).execute:regress" subtype="function" on="wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool).execute:public" qname="" parent="function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)" pqn="grant.function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool).execute:public" subtype="function" on="wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)" diff="none">
                    <dependencies direction="backwards">
                      <dependency fqn="function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <dependencies direction="forwards">
                      <dependency fqn="function.regressdb.wibble.fn7(pg_catalog.varchar,pg_catalog.varchar,pg_catalog.int4,pg_catalog.bool)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc" direction="backwards"/>
                    <context type="owner" value="regress" default="marc" direction="forwards"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
              <dbobject type="function" name="fn1" fqn="function.regressdb.wibble.fn1(pg_catalog.varchar)" qname="wibble.fn1(pg_catalog.varchar)" parent="schema.regressdb.wibble" diff="gone">
                <dependencies>
                  <dependency fqn="schema.regressdb.wibble"/>
                  <dependency fqn="language.regressdb.plpgsql"/>
                  <dependency fqn="role.regress"/>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="forwards">
                    <dependency fqn="grant.schema.regressdb.wibble.create"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                  <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]" direction="backwards">
                    <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                    <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                    <dependency fqn="privilege.role.regress.superuser"/>
                  </dependency-set>
                </dependencies>
                <context type="owner" value="regress" default="marc"/>
                <function name="fn1" schema="wibble" owner="regress" language="plpgsql" is_strict="yes" volatility="stable" cost="100" signature="wibble.fn1(pg_catalog.varchar)">
                  <result type="varchar" schema="pg_catalog"/>
                  <params>
                    <param type="varchar" schema="pg_catalog" name="p1" mode="i" position="1"/>
                  </params>
                  <source>
begin
  return p1;
end
</source>
                  <dbobject type="grant" name="execute:public" fqn="grant.function.regressdb.wibble.fn1(pg_catalog.varchar).execute:public" qname="" parent="function.regressdb.wibble.fn1(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn1(pg_catalog.varchar).execute:public" subtype="function" on="wibble.fn1(pg_catalog.varchar)" diff="gone">
                    <dependencies>
                      <dependency fqn="function.regressdb.wibble.fn1(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="public" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                  <dbobject type="grant" name="execute:regress" fqn="grant.function.regressdb.wibble.fn1(pg_catalog.varchar).execute" qname="" parent="function.regressdb.wibble.fn1(pg_catalog.varchar)" pqn="grant.function.regressdb.wibble.fn1(pg_catalog.varchar).execute:regress" subtype="function" on="wibble.fn1(pg_catalog.varchar)" diff="gone">
                    <dependencies>
                      <dependency fqn="function.regressdb.wibble.fn1(pg_catalog.varchar)"/>
                      <dependency fqn="role.regress"/>
                      <dependency-set priority="1" fallback="privilege.role.regress.superuser" parent="ancestor::dbobject[database]">
                        <dependency fqn="grant.schema.regressdb.wibble.usage"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency pqn="grant.schema.regressdb.wibble.usage:public"/>
                        <dependency fqn="grant.schema.regressdb.wibble.create"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:regress"/>
                        <dependency pqn="grant.schema.regressdb.wibble.create:public"/>
                        <dependency fqn="privilege.role.regress.superuser"/>
                      </dependency-set>
                    </dependencies>
                    <context type="owner" value="regress" default="marc"/>
                    <grant from="regress" to="regress" with-grant="no" priv="execute" automatic="yes"/>
                  </dbobject>
                </function>
              </dbobject>
            </schema>
          </dbobject>
          <dbobject type="cast" name="public.postal2::public.mychar" fqn="cast.regressdb.public.postal2::public.mychar" qname="(public.postal2 as public.mychar)" parent="database.regressdb" diff="gone">
            <dependencies>
              <dependency fqn="database.regressdb"/>
              <dependency fqn="type.regressdb.public.postal2"/>
              <dependency fqn="type.regressdb.public.mychar"/>
            </dependencies>
            <cast name="public.postal2::public.mychar" context="e">
              <source type="postal2" schema="public"/>
              <target type="mychar" schema="public"/>
            </cast>
          </dbobject>
        </database>
      </dbobject>
      <dbobject type="role" name="lose" qname="lose" fqn="role.lose" parent="database.regressdb" diff="gone">
        <dependency fqn="database.regressdb"/>
        <role name="lose" login="y" max_connections="-1">
          <privilege priv="inherit"/>
          <dbobject type="privilege" name="inherit" fqn="privilege.role.lose.inherit" qname="inherit" parent="role.lose" role_qname="lose" diff="gone">
            <dependencies>
              <dependency fqn="role.lose"/>
            </dependencies>
            <privilege priv="inherit"/>
          </dbobject>
        </role>
      </dbobject>
    </cluster>
  </dbobject>
</dump>
