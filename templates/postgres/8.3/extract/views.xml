<?xml version="1.0" encoding="UTF-8"?>

<skit:inclusion
   xmlns:skit="http://www.bloodnok.com/xml/skit"
   xmlns:xi="http://www.w3.org/2003/XInclude">
  <skit:foreach var="view" from="views" 
		filter="(string= (select view 'schema')
			          (select schema 'name'))">
    <view>
      <skit:let>
	<skit:attr name="name"/>
	<skit:attr name="schema"/>
	<skit:attr name="owner"/>
	<skit:attr name="privs"/>

	<source>
	  <skit:text expr="(select view 'definition')"/>
	</source>

	<!-- Identify functions/casts on which we depend -->
	<skit:runsql var="dependency" file="sql/getdeps.sql"
		     params='(list (select view "rewrite_oid") 
			     "pg_rewrite" 
			     "(&apos;pg_proc&apos;)")'>
	  <depends>
	    <skit:attr name="cast" 
		       expr="(select cast_sigs (select tuple 'objoid'))"/> 
	    <skit:attr name="function"
		       expr="(select function_sigs 
			     (select tuple 'objoid'))"/>
	  </depends>
	</skit:runsql>

	<!-- Identify other tables on which we depend -->
	<skit:runsql var="dependency" file="sql/getdeps.sql"
		     params='(list (select view "rewrite_oid") 
			     "pg_rewrite" 
			     "(&apos;pg_class&apos;)")'>
	  <depends>
	    <!-- <skit:exec expr="(debug 'select' (select tables (select
	    tuple 'objoid')))"/> -->
	    <skit:var name="table" 
		      expr="(select tables (select tuple 'objoid'))"/>
	    <skit:attr name="schema" expr="(select table 'schema')"/>
	    <skit:attr name="table" expr="(select table 'name')"/>
	  </depends>
	</skit:runsql>

	<skit:if test="(select view 'comment')">
	  <comment>
	    <skit:text expr="(select view 'comment')"/>
	  </comment>
	</skit:if>

	<skit:if test="(not (select tuple 'privs'))">
          <!-- No privileges defined for this table, so create
      	       default grants for the implicit privs -->
          <grant with_grant="yes" priv="trigger" default="yes">
      	    <skit:attr name="from" field="owner"/>
      	    <skit:attr name="to" field="owner"/>
          </grant>
          <grant with_grant="yes" priv="references" default="yes">
      	    <skit:attr name="from" field="owner"/>
      	    <skit:attr name="to" field="owner"/>
          </grant>
          <grant with_grant="yes" priv="rule" default="yes">
      	    <skit:attr name="from" field="owner"/>
      	    <skit:attr name="to" field="owner"/>
          </grant>
          <grant with_grant="yes" priv="select" default="yes">
      	    <skit:attr name="from" field="owner"/>
      	    <skit:attr name="to" field="owner"/>
          </grant>
          <grant with_grant="yes" priv="insert" default="yes">
      	    <skit:attr name="from" field="owner"/>
      	    <skit:attr name="to" field="owner"/>
          </grant>
          <grant with_grant="yes" priv="update" default="yes">
      	    <skit:attr name="from" field="owner"/>
      	    <skit:attr name="to" field="owner"/>
          </grant>
          <grant with_grant="yes" priv="delete" default="yes">
      	    <skit:attr name="from" field="owner"/>
      	    <skit:attr name="to" field="owner"/>
          </grant>
	</skit:if>

	<skit:exec_function name="grants_from_privs"
    			    privileges="(select tuple 'privs')"/>
      </skit:let>
    </view>
  </skit:foreach>
</skit:inclusion>  


<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
