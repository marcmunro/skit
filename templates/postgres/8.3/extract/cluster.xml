<?xml version="1.0" encoding="UTF-8"?>

<skit:inclusion
   xmlns:skit="http://www.bloodnok.com/xml/skit"
   xmlns:xi="http://www.w3.org/2003/XInclude">
  <cluster type="postgres">
    <skit:let>
      <!-- Create a hash of privilege names keyed by the characters
	   returned from queries on aclitem[] columns -->
      <skit:var name="privnames" 
		expr="&lt;('r' . 'select')
		          ('w' . 'update')
		          ('a' . 'insert')
		          ('d' . 'delete')
		          ('x' . 'references')
		          ('t' . 'trigger')
		          ('X' . 'execute')
		          ('U' . 'usage')
		          ('C' . 'create')
		          ('c' . 'connect')
		          ('T' . 'temporary')
		      &gt;"/>

      <skit:function name="getdeps">
	<skit:parameter name="source_catalog"/>
	<skit:parameter name="oid"/>
	<skit:runsql var="dependency" file="sql/getdeps.sql"
		         params="(list oid source_catalog)">
	  <skit:exec expr="(debug 'DEP' dependency)"/>
	  <depends>
	    <skit:attr name="type" expr="'function'"/>
	    <skit:attr name="name"
		       expr="(select function_sigs 
			     (select index_function 'objoid'))"/>
	  </depends>
	</skit:runsql>
      </skit:function>

      <skit:function name="grant">
	<skit:parameter name="with_grant"/>
	<skit:if test="(not (string= from to))">	
	  <skit:let>
	    <skit:var name="privname" expr="(select privnames this_priv)"/>
	    <grant>	
	      <skit:attr name="priv" expr="privname"/>
	      <skit:attr name="from" expr="from"/>
	      <skit:attr name="to" expr="to"/>
	      <skit:attr name="with_grant" expr="with_grant"/>
	    </grant>
	  </skit:let>
	</skit:if>
      </skit:function>

      <skit:function name="grants_from_privs">
	<skit:parameter name="privileges"/>
	<skit:if test="privileges">
	  <!-- The first regexp below removes the braces around the
	       privileges string.  The second one reverses the order of
	       characters followed by asterisks so that the asterisk
	       precedes the character it previously followed -->
	  <skit:var name="privs_list"
		    expr="(split (replace 
			            (replace privileges /\\{(.*)\\}/ '\1') 
				    /(.)\\*/ '*\1')
		                  ',')"/>
	  <skit:foreach from="privs_list" var="privs_str">
	    <skit:let>
	      <skit:var name="privinfo" expr="(split privs_str '/=')"/>
	      <skit:var name="tofield" expr="(select privinfo 0)"/>
	      <skit:var name="to" expr="(or (and (string= tofield '') 
					          'public')
					    tofield)"/>
	      <skit:var name="privs" 
			expr="(split (select privinfo 1) '\\*')"/>
	      <skit:var name="from" expr="(select privinfo 2)"/>
	      <skit:var name="privs_no_grant" expr="(select privs 0)"/>
	      <skit:var name="privs_with_grant" expr="(select privs 1)"/>
	      <skit:foreach from="privs_no_grant" var="this_priv">
		<skit:exec_function name="grant" with_grant="'no'"/>
	      </skit:foreach>
	      <skit:foreach from="privs_with_grant" var="this_priv">
		<skit:exec_function name="grant" with_grant="'yes'"/>
	      </skit:foreach>
	    </skit:let>
	  </skit:foreach>
	</skit:if>
      </skit:function>
	
      <skit:function name="type_handler">
	<skit:parameter name="oid"/>
	<skit:parameter name="type"/>
	<skit:if test="oid">
	  <skit:let>
	    <skit:var name="function" expr="(select functions oid)"/>
	    <skit:if test="(select function 'name')">
	      <handler-function>
		<skit:attr name="type" expr="type"/>
		<skit:attr name="name" expr="(select function 'name')"/>
		<skit:attr name="schema" expr="(select function 'schema')"/>
		<skit:attr name="signature" expr="(select function_sigs oid)"/>
	      </handler-function>
	    </skit:if>
	  </skit:let>
	</skit:if>
      </skit:function>
		     
      <!-- An example of a skit debug call -->
      <!-- <skit:exec expr="(debug 'PRIVNAMES' privnames)"/> -->
      <skit:attr name="port" expr="port"/>
      <skit:attr name="version"/>
      <skit:attr name="host" expr="host"/>

      <skit:runsql file="sql/dbinfo.sql" var="dbinfo">
	<skit:attr name="username"/>
	<xi:include href="skitfile:extract/roles.xml"/>
	<xi:include href="skitfile:extract/tablespaces.xml"/>
	<xi:include href="skitfile:extract/database.xml"/>
      </skit:runsql>
    </skit:let>
  </cluster>
</skit:inclusion>  


<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
