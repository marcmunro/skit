<?xml version="1.0" encoding="UTF-8"?>

<skit:inclusion
   xmlns:skit="http://www.bloodnok.com/xml/skit"
   xmlns:xi="http://www.w3.org/2003/XInclude">

  <skit:runsql var="schema" file="sql/schemata.sql">
    <schema>
      <skit:attr name="name"/>
      <skit:attr name="owner"/>
      <skit:attr name="privs"/>
      <skit:if test="(select tuple 'comment')">
	<comment>
	  <skit:text expr="(select tuple 'comment')"/>
	</comment>
      </skit:if>

      <skit:if test="(not (select tuple 'privs'))">
  	<grant with_grant="yes" priv="create">
  	  <skit:attr name="from" field="owner"/>
  	  <skit:attr name="to" field="owner"/>
  	</grant>
  	<grant with_grant="yes" priv="usage">
  	  <skit:attr name="from" field="owner"/>
  	  <skit:attr name="to" field="owner"/>
  	</grant>
      </skit:if>
      <skit:exec_function name="grants_from_privs"
  			  privileges="(select tuple 'privs')"/>

      <xi:include href="skitfile:extract/domains.xml"/>
      <xi:include href="skitfile:extract/enums.xml"/>
      <xi:include href="skitfile:extract/basetypes.xml"/>
      <xi:include href="skitfile:extract/comptypes.xml"/>
      <xi:include href="skitfile:extract/functions.xml"/>
      <xi:include href="skitfile:extract/aggregates.xml"/>
      <xi:include href="skitfile:extract/operators.xml"/>
      <xi:include href="skitfile:extract/operator_families.xml"/>
      <xi:include href="skitfile:extract/operator_classes.xml"/>
      <xi:include href="skitfile:extract/sequences.xml"/>
    </schema>
  </skit:runsql>
  <!-- <skit:exec expr="(debug 'TODO: operators, operator classes,
  aggregates, sequences, tables' nil)"/> -->
</skit:inclusion>


  <!-- These need to be moved into database.xml -->
  <skit:runsql var="operator_classes" file="sql/operator_classes.sql"/>
  <skit:runsql var="opclass_opers" file="sql/opclass_opers.sql"/>
  <skit:runsql var="opclass_funcs" file="sql/opclass_funcs.sql"/>
  <skit:runsql var="aggregates" file="sql/aggregate.sql"/>
  <skit:runsql var="tables" file="sql/tables.sql"/>

  <skit:foreach var="schemas">
    <schema>
      
      <skit:foreach var="operator_classes"
		       filter="tuple['schema'] == tuple.parent['name']">
	<operator_class>
	  <skit:copytuple/>
	  <skit:foreach var="opclass_opers"
			   filter="tuple['opclass_oid'] == tuple.parent['oid']">
	    <opclass_oper>
	      <skit:attr field='strategy'/>
	      <skit:attr field='op_name'/>
	      <skit:attr field='op_schema'/>
	      <skit:attr field='op_leftarg_name'/>
	      <skit:attr field='op_leftarg_schema'/>
	      <skit:attr field='op_rightarg_name'/>
	      <skit:attr field='op_rightarg_schema'/>
	    </opclass_oper>
	  </skit:foreach>
	  <skit:foreach var="opclass_funcs"
			   filter="tuple['opclass_oid'] == tuple.parent['oid']">
	    <skit:expr>
	      proc_oid = tuple['proc_oid']
	      func = Globals['functions'][proc_oid]
	      tuple['function_signature'] = sig = func['signature']
	      tuple['function_qname'] = sig_to_qname(sig)
	    </skit:expr>
	    <opclass_func>
	      <skit:copytuple/>
	      <!-- <skit:attr id="proc_num" field="proc_num"/>
	      <skit:attr id="proc_oid" field="proc_oid"/> -->
	    </opclass_func>
	  </skit:foreach>
	</operator_class>
      </skit:foreach>
	  
      <skit:foreach var="sequences"
		       filter="tuple['schema'] == tuple.parent['name']">
	<skit:expr>
	  sig = tuple['schema'] + '.' + tuple['name']
	  tuple['qname'] = sig_to_qname(sig)
	</skit:expr>
	<sequence>
	  <skit:attribute field="name"/>
	  <skit:attribute field="schema"/>
	  <skit:attribute field="owner"/>
	  <skit:attribute field="comment"/>
	  <skit:attribute field="privs"/>
	  <skit:runsql var="seq_attributes" file="sql/sequence_cols.sql"
			  param_1="tuple['qname']">
	    <skit:attribute field="start_with"/>
	    <skit:attribute field="increment_by"/>
	    <skit:attribute field="max_value"/>
	    <skit:attribute field="min_value"/>
	    <skit:attribute field="cache"/>
	    <skit:attribute field="is_cycled"/>
	  </skit:runsql>
          <skit:if test="!tuple['privs']">
	    <grant with_grant="yes" priv="trigger">
	      <skit:attr id="from" field_expr="#{owner}"/>
	      <skit:attr id="to" field_expr="#{owner}"/>
	    </grant>
	    <grant with_grant="yes" priv="references">
	      <skit:attr id="from" field_expr="#{owner}"/>
	      <skit:attr id="to" field_expr="#{owner}"/>
	    </grant>
	    <grant with_grant="yes" priv="rule">
	      <skit:attr id="from" field_expr="#{owner}"/>
	      <skit:attr id="to" field_expr="#{owner}"/>
	    </grant>
	    <grant with_grant="yes" priv="delete">
	      <skit:attr id="from" field_expr="#{owner}"/>
	      <skit:attr id="to" field_expr="#{owner}"/>
	    </grant>
	    <grant with_grant="yes" priv="insert">
	      <skit:attr id="from" field_expr="#{owner}"/>
	      <skit:attr id="to" field_expr="#{owner}"/>
	    </grant>
	    <grant with_grant="yes" priv="select">
	      <skit:attr id="from" field_expr="#{owner}"/>
	      <skit:attr id="to" field_expr="#{owner}"/>
	    </grant>
	    <grant with_grant="yes" priv="update">
	      <skit:attr id="from" field_expr="#{owner}"/>
	      <skit:attr id="to" field_expr="#{owner}"/>
	    </grant>
	  </skit:if>
          <skit:foreach split="privs">
            <skit:pg_eachpriv field="privs" 
      			   toname="to" privname="priv" fromname="from"
      			   withname="with_grant">
	      <grant>
      		<skit:if test="tuple['to'] == tuple['from']">
      		  <!-- If this is the implied grant to the owner,
      		       then they have with_grant="yes" -->
      		  <skit:attr id="with_grant" expr="'yes'"/>
      		</skit:if>
      		<skit:if test="tuple['to'] != tuple['from']">
      		  <skit:attr field="with_grant"/>
      		</skit:if>
      		<skit:attr field="priv"/>
      		<skit:attr field="from"/>
      		<skit:attr field="to"/>
	      </grant>
	    </skit:pg_eachpriv>
	  </skit:foreach>
	</sequence>
      </skit:foreach>

      <skit:include file="extract/tables.xml"/>
    </schema>
  </skit:foreach>


<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
